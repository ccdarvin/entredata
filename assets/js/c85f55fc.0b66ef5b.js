"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[339],{9888:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"comando-magico-timeit-jupyter","metadata":{"permalink":"/articles/comando-magico-timeit-jupyter","source":"@site/articles/comando magico timeit - jupyter.md","title":"Comando m\xe1gico timeit - jupyter","description":"El comando m\xe1gico %timeit en Jupyter Lab es una forma conveniente de medir el tiempo de ejecuci\xf3n de una expresi\xf3n o una funci\xf3n directamente en tus celdas de c\xf3digo. Puedes utilizar %timeit para obtener r\xe1pidamente el tiempo promedio de ejecuci\xf3n y comparar diferentes enfoques de implementaci\xf3n.","date":"2023-05-31T20:02:01.000Z","formattedDate":"May 31, 2023","tags":[{"label":"jupyter","permalink":"/articles/tags/jupyter"},{"label":"python","permalink":"/articles/tags/python"},{"label":"timeit","permalink":"/articles/tags/timeit"},{"label":"magic command","permalink":"/articles/tags/magic-command"}],"readingTime":3.1,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Comando m\xe1gico timeit - jupyter","description":"El comando m\xe1gico %timeit en Jupyter Lab es una forma conveniente de medir el tiempo de ejecuci\xf3n de una expresi\xf3n o una funci\xf3n directamente en tus celdas de c\xf3digo. Puedes utilizar %timeit para obtener r\xe1pidamente el tiempo promedio de ejecuci\xf3n y comparar diferentes enfoques de implementaci\xf3n.","slug":"comando-magico-timeit-jupyter","authors":["ccdarvin"],"tags":["jupyter","python","timeit","magic command"],"categories":["jupyter"]}},"content":"El comando m\xe1gico `%timeit` en Jupyter Lab es una forma conveniente de\\nmedir el tiempo de ejecuci\xf3n de una expresi\xf3n o una funci\xf3n directamente\\nen tus celdas de c\xf3digo. Puedes utilizar `%timeit` para obtener\\nr\xe1pidamente el tiempo promedio de ejecuci\xf3n y comparar diferentes\\nenfoques de implementaci\xf3n.\\n\\n## 1. Uso b\xe1sico de `%timeit` {#uso-b\xe1sico-de-timeit}\\n\\nPara utilizar `%timeit`, simplemente coloca el comando m\xe1gico antes de\\nla expresi\xf3n o funci\xf3n que deseas medir. Por ejemplo, para medir el\\ntiempo de ejecuci\xf3n de la expresi\xf3n `\'1 + 1\'`, puedes usar el siguiente\\nc\xf3digo en una celda de Jupyter Lab:\\n\\n<details>\\n<summary>Code</summary>\\n\\n``` python\\n%timeit 1 + 1\\n```\\n\\n</details>\\n\\n``` text\\n10.1 ns \xb1 0.491 ns per loop (mean \xb1 std. dev. of 7 runs, 100,000,000 loops each)\\n```\\n\\nDespu\xe9s de ejecutar la celda, `%timeit` ejecutar\xe1 la expresi\xf3n `\'1 + 1\'`\\nvarias veces y mostrar\xe1 el tiempo promedio de ejecuci\xf3n. En este caso,\\nel tiempo promedio de ejecuci\xf3n en unidades de tiempo\\n\\n## 2. Tabla de tiempos {#tabla-de-tiempos}\\n\\n| Abreviatura | Unidad de tiempo |\\n|-------------|------------------|\\n| ns          | nanosegundos     |\\n| us          | microsegundos    |\\n| ms          | milisegundos     |\\n| s           | segundos         |\\n| m           | minutos          |\\n| h           | horas            |\\n\\n## 3. Especificar el n\xfamero de ejecuciones y repeticiones {#especificar-el-n\xfamero-de-ejecuciones-y-repeticiones}\\n\\nPor defecto, `%timeit` ejecuta la expresi\xf3n o funci\xf3n 100.000 veces y\\nrepite la operaci\xf3n tres veces. Puedes especificar el n\xfamero de\\nejecuciones y repeticiones utilizando la sintaxis\\n`%timeit -r <repeticiones> -n <ejecuciones>`. Por ejemplo, para ejecutar\\nla expresi\xf3n `\'1 + 1\'` 10.000 veces y repetir la operaci\xf3n cinco veces,\\npuedes usar el siguiente c\xf3digo:\\n\\n<details>\\n<summary>Code</summary>\\n\\n``` python\\n%timeit -r5 -n50 1 + 1\\n```\\n\\n</details>\\n\\n``` text\\n25.6 ns \xb1 5.28 ns per loop (mean \xb1 std. dev. of 5 runs, 50 loops each)\\n```\\n\\nEn el comando anterior espesificamps que se ejecute 50 veces en 5\\nrepeticiones\\n\\n## 5. Medir el tiempo de ejecuci\xf3n de una funci\xf3n {#medir-el-tiempo-de-ejecuci\xf3n-de-una-funci\xf3n}\\n\\nTambi\xe9n puedes utilizar `%timeit` para medir el tiempo de ejecuci\xf3n de\\nuna funci\xf3n. Por ejemplo, para medir el tiempo de ejecuci\xf3n de la\\nfunci\xf3n `sum()` de Python, puedes usar el siguiente c\xf3digo:\\n\\n<details>\\n<summary>Code</summary>\\n\\n``` python\\ndef mi_funcion():\\n    # puedes colocar cualquier c\xf3digo aqu\xed\\n    return 1 + 1\\n```\\n\\n</details>\\n\\nJupyter Lab ejecutara el c\xf3digo y te devolvera el tiempo de ejecuci\xf3n de\\nla funci\xf3n\\n\\n## 6. Medir el tiempo de ejecuci\xf3n de una celda {#medir-el-tiempo-de-ejecuci\xf3n-de-una-celda}\\n\\nTambi\xe9n puedes utilizar `%timeit` para medir el tiempo de ejecuci\xf3n de\\nuna celda completa. Por ejemplo, para medir el tiempo de ejecuci\xf3n de la\\nsiguiente celda, puedes usar el siguiente c\xf3digo:\\n\\n<details>\\n<summary>Code</summary>\\n\\n``` python\\n%%timeit\\nx = 1\\nx += 1\\n```\\n\\n</details>\\n\\n``` text\\n36.7 ns \xb1 1.13 ns per loop (mean \xb1 std. dev. of 7 runs, 10,000,000 loops each)\\n```\\n\\n## 7. Obtener el tiempo de ejecuci\xf3n como variable {#obtener-el-tiempo-de-ejecuci\xf3n-como-variable}\\n\\nEn caso de que desees obtener informaci\xf3n m\xe1s detallada sobre el tiempo\\nde ejecuci\xf3n, podrias asignar el resultado de `%timeit` a una variable,\\npara esto utilizaremos las opciones `-o` para almacenar el resultado y\\n-q para silenciar la salida de la celda. Por ejemplo, para obtener el\\ntiempo de ejecuci\xf3n de la expresi\xf3n `\'1 + 1\'` como una variable, puedes\\nusar el siguiente c\xf3digo:\\n\\n<details>\\n<summary>Code</summary>\\n\\n``` python\\nresultado = %timeit -o -q 1 + 1\\nprint(f\'El mejor tiempo fue {resultado.best}\')\\nprint(f\'El peor tiempo fue {resultado.worst}\')\\n```\\n\\n</details>\\n\\n``` text\\nEl mejor tiempo fue 9.775258000008763e-09\\nEl peor tiempo fue 1.1235137999756262e-08\\n```\\n\\nHemos visto de forma muy rapida como usar el comando magico `%timeit` en\\nJupyter Lab, con expresiones muy sencillas, pero en la practica se\\nutiliza para medir el tiempo de ejecuci\xf3n de funciones y celdas\\ncompletas, lo cual es muy util para comparar diferentes enfoques de\\nimplementaci\xf3n."}]}')}}]);