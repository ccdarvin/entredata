"use strict";(self.webpackChunkdocsweb=self.webpackChunkdocsweb||[]).push([[4037],{3554:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/modelo-funcional-usando-el-API-de-Keras","metadata":{"permalink":"/article/modelo-funcional-usando-el-API-de-Keras","source":"@site/blog/modelo-funcional-usando-el-API-de-Keras.md","title":"Modelo funcional usando el API de Keras","description":"Modelo funcional usando el API de Keras","date":"2023-08-07T00:00:00.000Z","formattedDate":"7 de agosto de 2023","tags":[{"label":"keras","permalink":"/article/tags/keras"},{"label":"deep-learning","permalink":"/article/tags/deep-learning"},{"label":"python","permalink":"/article/tags/python"}],"readingTime":2.39,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Modelo funcional usando el API de Keras","description":"Modelo funcional usando el API de Keras","authors":["ccdarvin"],"date":"2023-08-07T00:00:00.000Z","tags":["keras","deep-learning","python"]},"nextItem":{"title":"Modelo con mutiples salidas","permalink":"/article/modelo-con-mutiples-salidas"}},"content":"Para crear un modelo de deep learning en keras se pueden usar dos API\u2019s:\\nla secuencial y la funcional. La secuencial es la m\xe1s sencilla de usar,\\npero la funcional es m\xe1s flexible y permite crear modelos m\xe1s complejos.\\nEn este notebook se muestra como crear un modelo funcional.\\n\\n## 1. Importar modulo {#importar-modulo}\\n\\n``` python\\nimport tensorflow as tf\\n```\\n\\n## 2. Modelo Sequencial {#modelo-sequencial}\\n\\nCrearemos un modelo secuencial, que es una pila lineal de capas. Para\\nello, usaremos la funci\xf3n `Sequential()`, en el que nos basaremos para\\ncrear nuestro modelo funcional.\\n\\n``` python\\ndef sequential_model():\\n    model = tf.keras.models.Sequential([\\n        tf.keras.layers.Flatten(input_shape=(28, 28)),\\n        tf.keras.layers.Dense(128, activation=tf.nn.relu),\\n        tf.keras.layers.Dense(10, activation=tf.nn.softmax)\\n    ])\\n    return model\\n```\\n\\n## Modelo con el API funcional {#modelo-con-el-api-funcional}\\n\\nAhora crearemos un modelo usando el api funcional de Keras. Este modelo\\nes un poco m\xe1s flexible que el modelo secuencial, ya que nos permite\\ncrear modelos con m\xfaltiples entradas y salidas, y tambi\xe9n nos permite\\ncrear modelos con capas compartidas.\\n\\n``` python\\ndef functional_model():\\n    # creamos nuestra entrada\\n    input = tf.keras.Input(shape=(28, 28))\\n    # creamos nuestra capas\\n    x = tf.keras.layers.Flatten()(input)\\n    x = tf.keras.layers.Dense(128, activation=\'relu\')(x)\\n    x = tf.keras.layers.Dense(64, activation=\'softmax\')(x)\\n    # definimos nuestro modelo\\n    model = tf.keras.Model(inputs=input, outputs=x)\\n    return model\\n\\nmodel_func = functional_model()\\n```\\n\\n## 3. Entrenar nuestro modelo {#entrenar-nuestro-modelo}\\n\\nAhora vamos a entrenar nuestro modelo usando los datos de\\n`fashion_mnist` que es uno de los datasets de ejemplo que vienen con\\ntensorflow.\\n\\n``` python\\nfashion_mnist = tf.keras.datasets.fashion_mnist\\n\\n(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()\\n\\n# normalizar los datos\\nX_train = X_train / 255.0\\nX_test = X_test / 255.0\\n\\n# configurar y conpilar nuestro modelo\\nmodel_func.compile(optimizer=\'adam\',\\n                loss=\'sparse_categorical_crossentropy\',\\n                metrics=[\'accuracy\'])\\n\\n# entrenar el modelo\\nmodel_func.fit(X_train, y_train, epochs=5)\\n```\\n\\n``` text\\nEpoch 1/5\\n1875/1875 [==============================] - 6s 3ms/step - loss: 0.2289 - accuracy: 0.9147\\nEpoch 2/5\\n1875/1875 [==============================] - 5s 3ms/step - loss: 0.2180 - accuracy: 0.9187\\nEpoch 3/5\\n1875/1875 [==============================] - 5s 3ms/step - loss: 0.2137 - accuracy: 0.9207\\nEpoch 4/5\\n1875/1875 [==============================] - 5s 3ms/step - loss: 0.2063 - accuracy: 0.9226\\nEpoch 5/5\\n1875/1875 [==============================] - 5s 3ms/step - loss: 0.2003 - accuracy: 0.9247\\n```\\n\\n``` text\\n<keras.callbacks.History at 0x212d77f6d50>\\n```\\n\\n## 4. Evalular el modelo {#evalular-el-modelo}\\n\\nPor ultimo vamos a evaluar el modelo con el conjunto de test. Para ello\\nvamos a utilizar la funci\xf3n `evaluate` del modelo. Esta funci\xf3n nos\\ndevuelve el valor de la funci\xf3n de perdida y el valor de la m\xe9trica que\\nhemos definido.\\n\\n``` python\\nmodel_func.evaluate(X_test, y_test)\\n```\\n\\n``` text\\n313/313 [==============================] - 1s 2ms/step - loss: 0.3422 - accuracy: 0.8854\\n```\\n\\n``` text\\n[0.34223565459251404, 0.8853999972343445]\\n```\\n\\nComo hemos visto crear un modelo usando el API funcional de keras, no es\\ncomplicado, pero si es un poco m\xe1s complejo que usando el API\\nsecuencial. Sin embargo, debemos tener en cuenta que el API funcional\\nnos permite crear modelos m\xe1s complejos, con m\xe1s de una entrada y m\xe1s de\\nuna salida, lo cual no es posible con el API secuencial."},{"id":"/modelo-con-mutiples-salidas","metadata":{"permalink":"/article/modelo-con-mutiples-salidas","source":"@site/blog/modelo-con-mutiples-salidas.md","title":"Modelo con mutiples salidas","description":"modelo-con-mutiples-salidas}","date":"2023-07-20T00:00:00.000Z","formattedDate":"20 de julio de 2023","tags":[],"readingTime":3.645,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Modelo con mutiples salidas","authors":["ccdarvin"],"date":"2023-07-20T00:00:00.000Z"},"prevItem":{"title":"Modelo funcional usando el API de Keras","permalink":"/article/modelo-funcional-usando-el-API-de-Keras"},"nextItem":{"title":"Resampling de series temporales con Pandas","permalink":"/article/time-series-resampling-with-pandas"}},"content":"export const quartoRawHtml =\\n[`<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n`,`\\n</div>`];\\n\\n# Modelo con mutiples salidas {#modelo-con-mutiples-salidas}\\n\\nEn este notebook, crearemos un modelo con multiples salidas usando el\\nAPI funcional de keras.\\n\\nPara el modelo usaremos lo datos de [Energy\\nefficiency](https://archive.ics.uci.edu/dataset/242/energy+efficiency)\\n\\n## Importar modulos {#importar-modulos}\\n\\n::: {.cell \\\\_cell_guid=\u2018bc1c482a-3443-4deb-bfbe-35775986216c\u2019\\n\\\\_uuid=\u20183869d47c-4312-4dae-8587-4c76fe28cb21\u2019\\nexecution=\u2018{\u201ciopub.execute_input\u201d:\u201c2023-08-11T20:34:57.287840Z\u201d,\u201ciopub.status.busy\u201d:\u201c2023-08-11T20:34:57.286929Z\u201d,\u201ciopub.status.idle\u201d:\u201c2023-08-11T20:34:57.295622Z\u201d,\u201cshell.execute_reply\u201d:\u201c2023-08-11T20:34:57.293802Z\u201d,\u201cshell.execute_reply.started\u201d:\u201c2023-08-11T20:34:57.287795Z\u201d}\u2019\\njupyter=\u2018{\u201coutputs_hidden\u201d:false}\u2019 trusted=\u2018true\u2019 execution_count=1}\\n\\n``` python\\nimport tensorflow as tf\\nimport numpy as np\\nimport pandas as pd\\nimport matplotlib.pyplot as plt\\nfrom sklearn.model_selection import train_test_split\\nfrom sklearn import preprocessing\\nimport requests\\nfrom io import BytesIO\\nimport zipfile\\n```\\n\\n:::\\n\\n## Preparar los datos {#preparar-los-datos}\\n\\nDescargamos el dataset y preparamos nuestros datos de entrenamiento y\\npruebas\\n\\n``` python\\n# download file\\nurl = \'https://archive.ics.uci.edu/static/public/242/energy+efficiency.zip\'\\nr = requests.get(url)\\nzip_data = BytesIO(r.content)\\n\\n# unzip\\nwith zipfile.ZipFile(zip_data, \'r\') as zip_file:\\n    with zip_file.open(\'ENB2012_data.xlsx\') as excel_file:\\n        df = pd.read_excel(excel_file)\\n\\n# random sort\\ndf = df.sample(frac=1)\\n\\ndf.head()\\n```\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[0] }} />\\n\\n|     | X1   | X2    | X3    | X4    | X5  | X6  | X7   | X8  | Y1    | Y2    |\\n|-----|------|-------|-------|-------|-----|-----|------|-----|-------|-------|\\n| 470 | 0.66 | 759.5 | 318.5 | 220.5 | 3.5 | 4   | 0.25 | 4   | 12.86 | 16.17 |\\n| 379 | 0.64 | 784.0 | 343.0 | 220.5 | 3.5 | 5   | 0.25 | 2   | 17.11 | 20.43 |\\n| 31  | 0.71 | 710.5 | 269.5 | 220.5 | 3.5 | 5   | 0.00 | 0   | 6.40  | 11.67 |\\n| 747 | 0.74 | 686.0 | 245.0 | 220.5 | 3.5 | 5   | 0.40 | 5   | 14.39 | 16.70 |\\n| 737 | 0.79 | 637.0 | 343.0 | 147.0 | 7.0 | 3   | 0.40 | 5   | 41.96 | 37.70 |\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[1] }} />\\n\\n::: {.cell \\\\_cell_guid=\u2018966384d2-52f6-43fe-a9a7-30a34005525c\u2019\\n\\\\_uuid=\u2018246e7b03-c479-425e-b12e-0d31b6caa74c\u2019\\nexecution=\u2018{\u201ciopub.execute_input\u201d:\u201c2023-08-11T20:35:01.995196Z\u201d,\u201ciopub.status.busy\u201d:\u201c2023-08-11T20:35:01.994656Z\u201d,\u201ciopub.status.idle\u201d:\u201c2023-08-11T20:35:02.010268Z\u201d,\u201cshell.execute_reply\u201d:\u201c2023-08-11T20:35:02.008886Z\u201d,\u201cshell.execute_reply.started\u201d:\u201c2023-08-11T20:35:01.995155Z\u201d}\u2019\\njupyter=\u2018{\u201coutputs_hidden\u201d:false}\u2019 trusted=\u2018true\u2019 execution_count=3}\\n\\n``` python\\n# split data\\ntrain, test = train_test_split(df, test_size=0.2)\\n\\ndef format_data(df: pd.DataFrame):\\n    y1 = df[\'Y1\'].values\\n    y2 = df[\'Y2\'].values\\n    X = df.drop([\'Y1\', \'Y2\'], axis=1)\\n    return X, (y1, y2)\\n\\nX_train, Y_train = format_data(train)\\nX_test, Y_test = format_data(test)\\n```\\n\\n:::\\n\\n::: {.cell \\\\_cell_guid=\u2018f867a2c3-849d-476b-8068-deea62ff3ea8\u2019\\n\\\\_uuid=\u20183717aebb-1951-47bc-aeb9-ef1ee7af3ced\u2019\\nexecution=\u2018{\u201ciopub.execute_input\u201d:\u201c2023-08-11T20:35:06.917556Z\u201d,\u201ciopub.status.busy\u201d:\u201c2023-08-11T20:35:06.917099Z\u201d,\u201ciopub.status.idle\u201d:\u201c2023-08-11T20:35:06.925773Z\u201d,\u201cshell.execute_reply\u201d:\u201c2023-08-11T20:35:06.924386Z\u201d,\u201cshell.execute_reply.started\u201d:\u201c2023-08-11T20:35:06.917524Z\u201d}\u2019\\njupyter=\u2018{\u201coutputs_hidden\u201d:false}\u2019 trusted=\u2018true\u2019 execution_count=4}\\n\\n``` python\\n# normalize data\\nscaler = preprocessing.StandardScaler()\\nX_train_norm = scaler.fit_transform(X_train)\\nX_test_norm = scaler.transform(X_test)\\n```\\n\\n:::\\n\\n## El modelo {#el-modelo}\\n\\nAhora construiremos nuestro modelo teniendo en cuenta que va a tener dos\\nsalidas\\n\\n``` python\\ndef build_model():\\n    input_layer = tf.keras.layers.Input(shape=(8,))\\n    hidden_layer = tf.keras.layers.Dense(128, activation=\'relu\')(input_layer)\\n    hidden_layer = tf.keras.layers.Dense(128, activation=\'relu\')(hidden_layer)\\n\\n    # ouput 1\\n    y1 = tf.keras.layers.Dense(1, name=\'y1\')(hidden_layer)\\n\\n    # output 2\\n    hidden_layer = tf.keras.layers.Dense(64, activation=\'relu\')(hidden_layer)\\n\\n    y2 = tf.keras.layers.Dense(1, name=\'y2\')(hidden_layer)\\n\\n    return tf.keras.models.Model(inputs=input_layer, outputs=[y1, y2])\\n```\\n\\n## Graficar nuestro modelo {#graficar-nuestro-modelo}\\n\\nVamos a graficar nuestro modelo donde podemos observar de forma mas\\nsimple nuestras dos salidas `y1` y `y2`, tambien podemos ver que `y2`\\ntiene una capa extra, esta es la de\\n`tf.keras.layers.Dense(units=1, name=\'y2\', activation=\'linear\')(X)`\\n\\n``` python\\nmodel = build_model()\\nmodel.summary()\\n```\\n\\n``` text\\nModel: \\"model\\"\\n__________________________________________________________________________________________________\\n Layer (type)                   Output Shape         Param #     Connected to                     \\n==================================================================================================\\n input_1 (InputLayer)           [(None, 8)]          0           []                               \\n                                                                                                  \\n dense (Dense)                  (None, 128)          1152        [\'input_1[0][0]\']                \\n                                                                                                  \\n dense_1 (Dense)                (None, 128)          16512       [\'dense[0][0]\']                  \\n                                                                                                  \\n dense_2 (Dense)                (None, 64)           8256        [\'dense_1[0][0]\']                \\n                                                                                                  \\n y1 (Dense)                     (None, 1)            129         [\'dense_1[0][0]\']                \\n                                                                                                  \\n y2 (Dense)                     (None, 1)            65          [\'dense_2[0][0]\']                \\n                                                                                                  \\n==================================================================================================\\nTotal params: 26,114\\nTrainable params: 26,114\\nNon-trainable params: 0\\n__________________________________________________________________________________________________\\n```\\n\\n## Configurar parametros {#configurar-parametros}\\n\\n``` python\\nmodel.compile(\\n    optimizer=tf.optimizers.SGD(learning_rate=0.001),\\n    loss={\\n        \'y1\': tf.keras.losses.MeanSquaredError(),\\n        \'y2\': tf.keras.losses.MeanSquaredError(),\\n    },\\n    metrics={\\n        \'y1\': tf.keras.metrics.RootMeanSquaredError(),\\n        \'y2\': tf.keras.metrics.RootMeanSquaredError(),\\n    }\\n)\\n```\\n\\n# Entrenar el modelo {#entrenar-el-modelo}\\n\\n``` python\\nmodel.fit(\\n    X_train_norm, Y_train,\\n    epochs=500, batch_size=10,\\n    validation_data=(X_test_norm, Y_test),\\n    verbose=0\\n)\\n```\\n\\n``` text\\n<keras.callbacks.History at 0x1e161d1ed10>\\n```\\n\\n## Evaluar el modelo {#evaluar-el-modelo}\\n\\nAhora vamos a evaluar el modelo y graficar los datos para tener una\\nmejor idea de lo que esta pasando\\n\\n``` python\\nmodel.evaluate(X_test_norm, Y_test)\\n```\\n\\n``` text\\n5/5 [==============================] - 0s 2ms/step - loss: 0.9150 - y1_loss: 0.2067 - y2_loss: 0.7082 - y1_root_mean_squared_error: 0.4547 - y2_root_mean_squared_error: 0.8416\\n```\\n\\n``` text\\n[0.9149883389472961,\\n 0.2067471146583557,\\n 0.7082412838935852,\\n 0.454694539308548,\\n 0.8415707349777222]\\n```\\n\\n## Comparar datos reales y predichos {#comparar-datos-reales-y-predichos}\\n\\n``` python\\npred = model.predict(X_test_norm)\\nprint(pred[0][:5])\\nY_test[0][:5]\\n```\\n\\n``` text\\n5/5 [==============================] - 0s 1ms/step\\n[[33.359097]\\n [37.002422]\\n [23.915794]\\n [35.689697]\\n [24.020735]]\\n```\\n\\n``` text\\narray([33.16, 37.26, 24.03, 35.94, 24.24])\\n```\\n\\n``` python\\ndef plot_values(ax, y_true, y_pred, title):\\n    ax.scatter(y_true, y_pred, alpha=0.5)\\n    ax.plot([y_true.min(), y_true.max()], [y_true.min(), y_true.max()], \'--\')\\n    ax.set_xlabel(\'True value\')\\n    ax.set_ylabel(\'Predicted value\')\\n    ax.set_title(title)\\n\\n# Y1 vs pred\\nfig, ax = plt.subplots(1, 2, figsize=(15, 5))\\nplot_values(ax[0], Y_test[0], pred[0], \'Y1\')\\nplot_values(ax[1], Y_test[1], pred[1], \'Y2\')\\n```\\n\\n![](modelo-con-mutiples-salidas_files/figure-markdown_strict/cell-12-output-1.png)"},{"id":"/time-series-resampling-with-pandas","metadata":{"permalink":"/article/time-series-resampling-with-pandas","source":"@site/blog/time-series-resampling-with-pandas.md","title":"Resampling de series temporales con Pandas","description":"En este articulo vamos a ver como hacer resampling de series de tiempo","date":"2023-07-18T00:00:00.000Z","formattedDate":"18 de julio de 2023","tags":[{"label":"pandas","permalink":"/article/tags/pandas"},{"label":"series temporales","permalink":"/article/tags/series-temporales"},{"label":"resampling","permalink":"/article/tags/resampling"}],"readingTime":2.805,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Resampling de series temporales con Pandas","date":"2023-07-18T00:00:00.000Z","authors":["ccdarvin"],"tags":["pandas","series temporales","resampling"]},"prevItem":{"title":"Modelo con mutiples salidas","permalink":"/article/modelo-con-mutiples-salidas"},"nextItem":{"title":"Comparar series de tiempo","permalink":"/article/Compare-time-series-growth-rates"}},"content":"En este articulo vamos a ver como hacer resampling de series de tiempo\\ncon pandas. El resampling es un proceso de conversi\xf3n de series de\\ntiempo de una frecuencia a otra. La frecuencia puede ser diaria,\\nmensual, trimestral, anual, etc. Por ejemplo, podemos convertir una\\nserie de tiempo con frecuencia diaria a una serie de tiempo con\\nfrecuencia mensual. Tambi\xe9n podemos convertir una serie de tiempo con\\nfrecuencia mensual a una serie de tiempo con frecuencia anual.\\n\\n## 1. Frecuencias de series de tiempo {#frecuencias-de-series-de-tiempo}\\n\\nLas series de tiempo pueden tener diferentes frecuencias, ahora vamos a\\nver las frecuencias que podemos encontrar en pandas.\\n\\n| C\xf3digo | Descripci\xf3n              |\\n|--------|--------------------------|\\n| B      | Frecuencia de negocios   |\\n| C      | Frecuencia personalizada |\\n| D      | Frecuencia diaria        |\\n| W      | Frecuencia semanal       |\\n| M      | Frecuencia mensual       |\\n| Q      | Frecuencia trimestral    |\\n| A      | Frecuencia anual         |\\n| H      | Frecuencia horaria       |\\n| T      | Frecuencia minutal       |\\n| S      | Frecuencia segundal      |\\n\\n## 2. Importar librer\xedas {#importar-librer\xedas}\\n\\nPrimero empesaremos importando las librer\xedas que vamos a utilizar.\\n\\n``` python\\nimport pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\n```\\n\\n## 3. Cagar y preparar los datos {#cagar-y-preparar-los-datos}\\n\\nAhora vamos a crear un DataFrame con datos usando una frecuencia diaria.\\n\\n``` python\\ndate_range = pd.date_range(\'01/01/2020\', periods=365, freq=\'D\')\\n# crearemos datos para la demostraci\xf3n\\ndata = np.random.randn(len(date_range))\\ndf = pd.DataFrame(data, index=date_range, columns=[\'Value\'])\\n# graficamos los datos\\ndf.plot()\\nplt.show()\\n```\\n\\n![](time-series-resampling-with-pandas_files/figure-markdown_strict/cell-3-output-1.png)\\n\\n## 4. Resampling a una frecuencia mas baja (downsampling) {#resampling-a-una-frecuencia-mas-baja-downsampling}\\n\\nAhora vamos a convertir la serie de tiempo con frecuencia diaria a una\\nserie de tiempo con frecuencia mensual. Para hacer esto vamos a usar el\\nm\xe9todo `resample()`, al tener una frecuencia mas baja tenemos que\\nespecificar como queremos que se agreguen los datos, vamos a tener que\\ningresar una funci\xf3n de agregaci\xf3n. En este caso vamos a usar la funci\xf3n\\n`mean()` para calcular el promedio de los datos, peru tu puedes usar\\ncualquier funci\xf3n de agregaci\xf3n que necesites.\\n\\n``` python\\ndf_monthly_mean = df.resample(\'M\').mean()\\ndf_monthly_mean.head(5)\\n# graficamos los datos\\ndf_monthly_mean.plot()\\nplt.show()\\n```\\n\\n![](time-series-resampling-with-pandas_files/figure-markdown_strict/cell-4-output-1.png)\\n\\n## 5. Resampling a una frecuencia mas alta (upsampling) {#resampling-a-una-frecuencia-mas-alta-upsampling}\\n\\nYa vimos como disminuir la frecuencia, ahora veremos como aumentar la\\nfrecuencia. Para hacer esto vamos a usar el m\xe9todo `resample()` y\\nespecificar la frecuencia que queremos. En este caso vamos a aumentar la\\nfrecuencia de diaria a horaria, para esto vamos a usar el c\xf3digo `H` que\\nsignifica frecuencia horaria.\\n\\n``` python\\ndf_hourly = df.resample(\'H\').ffill() # otros metodos: bfill, interpolate\\n```\\n\\nPara poder ver con mas detalle los datos haremos un acercamiento a un\\nperiodo de tiempo especifico.\\n\\n``` python\\ndf_hourly.loc[\'2020-01-01\':\'2020-01-30\'].plot()\\nplt.show()\\n```\\n\\n![](time-series-resampling-with-pandas_files/figure-markdown_strict/cell-6-output-1.png)\\n\\n## 6. Manejar los datos faltantes {#manejar-los-datos-faltantes}\\n\\nComo pudimos ver en el ejemplo anterior cuando aumentamos la frecuenc\xeda\\nde diaria a horaria, muchos valores se convirtieron en `NaN`. Para\\nsolucionar esto vamos a usar el m\xe9todo `interpolate()` para interpolar\\nlos valores faltantes.\\n\\n``` python\\ndf_hourly = df.resample(\'H\').interpolate()\\ndf_hourly.loc[\'2020-01-01\':\'2020-01-30\'].plot()\\nplt.show()\\n```\\n\\n![](time-series-resampling-with-pandas_files/figure-markdown_strict/cell-7-output-1.png)\\n\\n## 7. Resampling con multiples metodos de agregaci\xf3n {#resampling-con-multiples-metodos-de-agregaci\xf3n}\\n\\nTambien podemos hacer un resampling con multiples m\xe9todos de agregaci\xf3n.\\nPara hacer esto vamos a usar el m\xe9todo `agg()` y especificar los m\xe9todos\\nde agregaci\xf3n que queremos usar.\\n\\n``` python\\ndf_weekly = df.resample(\'W\').agg([\'mean\', \'std\', \'min\', \'max\'])\\ndf_weekly.plot()\\nplt.show()\\n```\\n\\n![](time-series-resampling-with-pandas_files/figure-markdown_strict/cell-8-output-1.png)\\n\\nEso es todo por ahora, espero que este articulo te haya sido de ayuda"},{"id":"/Compare-time-series-growth-rates","metadata":{"permalink":"/article/Compare-time-series-growth-rates","source":"@site/blog/Compare-time-series-growth-rates.md","title":"Comparar series de tiempo","description":"Comparar series de tiempo con pandas y matplotlib, usando datos de acciones.","date":"2023-07-12T00:00:00.000Z","formattedDate":"12 de julio de 2023","tags":[{"label":"python","permalink":"/article/tags/python"},{"label":"pandas","permalink":"/article/tags/pandas"},{"label":"matplotlib","permalink":"/article/tags/matplotlib"},{"label":"series de tiempo","permalink":"/article/tags/series-de-tiempo"},{"label":"finanzas","permalink":"/article/tags/finanzas"}],"readingTime":2.72,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Comparar series de tiempo","description":"Comparar series de tiempo con pandas y matplotlib, usando datos de acciones.","date":"2023-07-12T00:00:00.000Z","authors":["ccdarvin"],"tags":["python","pandas","matplotlib","series de tiempo","finanzas"]},"prevItem":{"title":"Resampling de series temporales con Pandas","permalink":"/article/time-series-resampling-with-pandas"},"nextItem":{"title":"\xbfComo ver los d\xedas de la semana usando pandas?","permalink":"/article/how-to-see-the-days-of-the-week-with-pandas"}},"content":"export const quartoRawHtml =\\n[`<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n`,`\\n</div>`,`<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n`,`\\n</div>`];\\n\\n# Comparar series de tiempo con pandas {#comparar-series-de-tiempo-con-pandas}\\n\\nComparar series de tiempo con pandas, de algunas acciones de las\\nprincipales empresas tecnol\xf3gicas.\\n\\n## 1. Importar librer\xedas {#importar-librer\xedas}\\n\\nPara este ejercicio, se necesitara de las siguientes librer\xedas:\\n\\n``` bash\\npip install pandas\\npip install matplotlib\\npip install yfinance\\n```\\n\\nUsaremos la librer\xeda `yfinance` para obtener los datos de las acciones\\nde las empresas tecnol\xf3gicas, hay otras librear\xedas que tambi\xe9n pueden\\nayudar con esta tarea como `pandas_datareader` o `quandl`.\\n\\n``` python\\nimport pandas as pd\\nimport matplotlib.pyplot as plt\\nimport yfinance as yf\\n```\\n\\n## 2. Obtener datos {#obtener-datos}\\n\\nPara este ejemplo, se obtendr\xe1n los datos de las acciones de las\\nempresas tecnol\xf3gicas desde el 2015 de google, amazon, facebook, apple y\\nmicrosoft.\\n\\n``` python\\ntickets = [\'GOOG\', \'AMZN\', \'META\', \'AAPL\', \'MSFT\']\\nstart_date = \'2015-01-01\'\\nend_date = \'2023-01-01\'\\n\\ndf = yf.download(tickets, start=start_date, end=end_date)[\'Adj Close\']\\ndf.head()\\n```\\n\\n``` text\\n[*********************100%***********************]  5 of 5 completed\\n```\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[0] }} />\\n\\n|            | AAPL      | AMZN    | GOOG      | META      | MSFT      |\\n|------------|-----------|---------|-----------|-----------|-----------|\\n| Date       |           |         |           |           |           |\\n| 2015-01-02 | 24.531763 | 15.4260 | 26.168653 | 78.449997 | 40.620667 |\\n| 2015-01-05 | 23.840666 | 15.1095 | 25.623152 | 77.190002 | 40.247116 |\\n| 2015-01-06 | 23.842913 | 14.7645 | 25.029282 | 76.150002 | 39.656406 |\\n| 2015-01-07 | 24.177238 | 14.9210 | 24.986401 | 76.150002 | 40.160259 |\\n| 2015-01-08 | 25.106184 | 15.0230 | 25.065184 | 78.180000 | 41.341694 |\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[1] }} />\\n\\n## 3. Normalizar datos {#normalizar-datos}\\n\\nPara poder comparar los datos vamos a normalizarlos, para esto se usar\xe1\\nla siguiente f\xf3rmula:\\n\\n$$ \\\\frac{P_t}{P_0} * 100 $$ Donde $P_t$ es el precio en el tiempo $t$ y\\n$P_0$ es el precio inicial.\\n\\n``` python\\nnormalized_df = df / df.iloc[0] * 100\\nnormalized_df.head()\\n```\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[2] }} />\\n\\n|            | AAPL       | AMZN       | GOOG       | META       | MSFT       |\\n|------------|------------|------------|------------|------------|------------|\\n| Date       |            |            |            |            |            |\\n| 2015-01-02 | 100.000000 | 100.000000 | 100.000000 | 100.000000 | 100.000000 |\\n| 2015-01-05 | 97.182847  | 97.948271  | 97.915438  | 98.393888  | 99.080393  |\\n| 2015-01-06 | 97.192006  | 95.711785  | 95.646043  | 97.068202  | 97.626183  |\\n| 2015-01-07 | 98.554834  | 96.726305  | 95.482179  | 97.068202  | 98.866569  |\\n| 2015-01-08 | 102.341540 | 97.387528  | 95.783238  | 99.655836  | 101.775026 |\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[3] }} />\\n\\n## 4. Graficar datos {#graficar-datos}\\n\\nPor ultimo grafiaremos los datos para poder compararlos y ver como se\\nhan comportado en el tiempo.\\n\\n``` python\\nnormalized_df.plot(figsize=(15, 10))\\nplt.show()\\n```\\n\\n![](Compare-time-series-growth-rates_files/figure-markdown_strict/cell-5-output-1.png)\\n\\n## 5. Conclusiones {#conclusiones}\\n\\nComo hemos podido ver hacer una comparaci\xf3n de series de tiempo es muy\\nsencillo con pandas, y nos permite ver como se han comportado las\\nacciones de las empresas tecnol\xf3gicas en los \xfaltimos a\xf1os, las\\nconcluciones respecto al comportamiento de las acciones de las empresas\\ntecnol\xf3gicas se las dejo a ustedes."},{"id":"/how-to-see-the-days-of-the-week-with-pandas","metadata":{"permalink":"/article/how-to-see-the-days-of-the-week-with-pandas","source":"@site/blog/how-to-see-the-days-of-the-week-with-pandas.md","title":"\xbfComo ver los d\xedas de la semana usando pandas?","description":"Aprende como ver los d\xedas de la semana usando pandas en python.","date":"2023-07-10T00:00:00.000Z","formattedDate":"10 de julio de 2023","tags":[{"label":"python","permalink":"/article/tags/python"},{"label":"pandas","permalink":"/article/tags/pandas"},{"label":"datetime","permalink":"/article/tags/datetime"}],"readingTime":1.15,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"\xbfComo ver los d\xedas de la semana usando pandas?","description":"Aprende como ver los d\xedas de la semana usando pandas en python.","authors":["ccdarvin"],"date":"2023-07-10T00:00:00.000Z","tags":["python","pandas","datetime"]},"prevItem":{"title":"Comparar series de tiempo","permalink":"/article/Compare-time-series-growth-rates"},"nextItem":{"title":"Scraping web con BeautifulSoup","permalink":"/article/scraping-with-BeautifulSoup"}},"content":"export const quartoRawHtml =\\n[`<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n`,`\\n</div>`];\\n\\n# \xbfComo ver los d\xedas de la semana usando pandas?\\\\` {#como-ver-los-d\xedas-de-la-semana-usando-pandas}\\n\\nCon pandas podemos ver de forma muy sencilla los d\xedas de la semana de\\nuna fecha en espec\xedfico, para esto usaremos la funci\xf3n `weekday_name` y\\ncon `dayofweek` podemos ver el n\xfamero del d\xeda de la semana.\\n\\n``` python\\nimport pandas\\n\\nday = pandas.to_datetime(\'2023-07-10\')\\nprint(day.dayofweek, day.day_name())\\n```\\n\\n``` text\\n0 Monday\\n```\\n\\n``` python\\n# todos los d\xedas de la semana\\nweek = pandas.date_range(start=\'2023-07-10\', periods=7, freq=\'D\')\\nfor day in week:\\n    print(day.dayofweek, day.day_name())\\n```\\n\\n``` text\\n0 Monday\\n1 Tuesday\\n2 Wednesday\\n3 Thursday\\n4 Friday\\n5 Saturday\\n6 Sunday\\n```\\n\\n``` python\\n# df con los dias de la semana\\ndf = pandas.DataFrame(week, columns=[\'date\'])\\ndf[\'dayofweek\'] = df[\'date\'].dt.dayofweek\\ndf[\'dayname\'] = df[\'date\'].dt.day_name()\\ndf.set_index(\'date\', inplace=True)\\ndf\\n```\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[0] }} />\\n\\n|            | dayofweek | dayname   |\\n|------------|-----------|-----------|\\n| date       |           |           |\\n| 2023-07-10 | 0         | Monday    |\\n| 2023-07-11 | 1         | Tuesday   |\\n| 2023-07-12 | 2         | Wednesday |\\n| 2023-07-13 | 3         | Thursday  |\\n| 2023-07-14 | 4         | Friday    |\\n| 2023-07-15 | 5         | Saturday  |\\n| 2023-07-16 | 6         | Sunday    |\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[1] }} />"},{"id":"/scraping-with-BeautifulSoup","metadata":{"permalink":"/article/scraping-with-BeautifulSoup","source":"@site/blog/scraping-with-BeautifulSoup.md","title":"Scraping web con BeautifulSoup","description":"Scraping web con BeautifulSoup","date":"2023-07-10T00:00:00.000Z","formattedDate":"10 de julio de 2023","tags":[{"label":"python","permalink":"/article/tags/python"},{"label":"web","permalink":"/article/tags/web"},{"label":"scraping","permalink":"/article/tags/scraping"},{"label":"beautifulsoup","permalink":"/article/tags/beautifulsoup"}],"readingTime":8.05,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Scraping web con BeautifulSoup","description":"Scraping web con BeautifulSoup","authors":["ccdarvin"],"date":"2023-07-10T00:00:00.000Z","tags":["python","web","scraping","beautifulsoup"]},"prevItem":{"title":"\xbfComo ver los d\xedas de la semana usando pandas?","permalink":"/article/how-to-see-the-days-of-the-week-with-pandas"},"nextItem":{"title":"Arboles de decisi\xf3n y m\xe9todos de ensamble","permalink":"/article/arboles-decision-ensamble"}},"content":"En esta secci\xf3n vamos a ver c\xf3mo podemos extraer informaci\xf3n de p\xe1ginas\\nweb usando la librer\xeda `BeautifulSoup` de Python, veremos el poder de\\nesta librer\xeda y c\xf3mo podemos usarla para extraer informaci\xf3n de p\xe1ginas\\nweb.\\n\\n## 1. Requerimientos {#requerimientos}\\n\\nAntes de empezar, debemos instalar las siguientes librer\xedas:\\n\\n``` bash\\npip install requests\\npip install beautifulsoup4\\n```\\n\\n## 2. Importar librer\xedas {#importar-librer\xedas}\\n\\nComo en todo codigo de Python, lo primero que debemos hacer es importar\\nlas librer\xedas que vamos a usar, en este caso\\n\\n``` python\\nfrom bs4 import BeautifulSoup\\nimport requests\\n```\\n\\n## 3. Obtener el contenido de una p\xe1gina web {#obtener-el-contenido-de-una-p\xe1gina-web}\\n\\nBeautifulSoup no puede optener el contenido directamente desde una url,\\npor lo que nos vamos ayudar en el m\xf3dulo `requests`\\n\\n``` python\\nurl = \'https://peps.python.org/pep-0020/\'\\nr = requests.get(url)\\nhtml = r.text\\n```\\n\\n## 4. Ver el contenido de la p\xe1gina {#ver-el-contenido-de-la-p\xe1gina}\\n\\nBeautifulSoup nos permite ver el contenido de la p\xe1gina de una forma m\xe1s\\namigable, para ello usamos el m\xe9todo `prettify()`\\n\\n``` python\\nsoup = BeautifulSoup(html, \'html\')\\nprint(soup.prettify())\\n```\\n\\n``` text\\n<!DOCTYPE html>\\n<html lang=\\"en\\">\\n <head>\\n  <meta charset=\\"utf-8\\"/>\\n  <meta content=\\"width=device-width, initial-scale=1.0\\" name=\\"viewport\\"/>\\n  <meta content=\\"light dark\\" name=\\"color-scheme\\"/>\\n  <title>\\n   PEP 20 \u2013 The Zen of Python | peps.python.org\\n  </title>\\n  <link href=\\"../_static/py.png\\" rel=\\"shortcut icon\\"/>\\n  <link href=\\"https://peps.python.org/pep-0020/\\" rel=\\"canonical\\"/>\\n  <link href=\\"../_static/style.css\\" rel=\\"stylesheet\\" type=\\"text/css\\"/>\\n  <link href=\\"../_static/mq.css\\" rel=\\"stylesheet\\" type=\\"text/css\\"/>\\n  <link href=\\"../_static/pygments.css\\" id=\\"pyg-light\\" media=\\"(prefers-color-scheme: light)\\" rel=\\"stylesheet\\" type=\\"text/css\\"/>\\n  <link href=\\"../_static/pygments_dark.css\\" id=\\"pyg-dark\\" media=\\"(prefers-color-scheme: dark)\\" rel=\\"stylesheet\\" type=\\"text/css\\"/>\\n  <link href=\\"https://peps.python.org/peps.rss\\" rel=\\"alternate\\" title=\\"Latest PEPs\\" type=\\"application/rss+xml\\"/>\\n  <meta content=\\"Python Enhancement Proposals (PEPs)\\" name=\\"description\\"/>\\n </head>\\n <body>\\n  <svg style=\\"display: none;\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n   <symbol id=\\"svg-sun-half\\" pointer-events=\\"all\\" viewbox=\\"0 0 24 24\\">\\n    <title>\\n     Following system colour scheme\\n    </title>\\n    <svg fill=\\"none\\" stroke=\\"currentColor\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" viewbox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n     <circle cx=\\"12\\" cy=\\"12\\" r=\\"9\\">\\n     </circle>\\n     <path d=\\"M12 3v18m0-12l4.65-4.65M12 14.3l7.37-7.37M12 19.6l8.85-8.85\\">\\n     </path>\\n    </svg>\\n   </symbol>\\n   <symbol id=\\"svg-moon\\" pointer-events=\\"all\\" viewbox=\\"0 0 24 24\\">\\n    <title>\\n     Selected dark colour scheme\\n    </title>\\n    <svg fill=\\"none\\" stroke=\\"currentColor\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" viewbox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n     <path d=\\"M0 0h24v24H0z\\" fill=\\"none\\" stroke=\\"none\\">\\n     </path>\\n     <path d=\\"M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z\\">\\n     </path>\\n    </svg>\\n   </symbol>\\n   <symbol id=\\"svg-sun\\" pointer-events=\\"all\\" viewbox=\\"0 0 24 24\\">\\n    <title>\\n     Selected light colour scheme\\n    </title>\\n    <svg fill=\\"none\\" stroke=\\"currentColor\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" viewbox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n     <circle cx=\\"12\\" cy=\\"12\\" r=\\"5\\">\\n     </circle>\\n     <line x1=\\"12\\" x2=\\"12\\" y1=\\"1\\" y2=\\"3\\">\\n     </line>\\n     <line x1=\\"12\\" x2=\\"12\\" y1=\\"21\\" y2=\\"23\\">\\n     </line>\\n     <line x1=\\"4.22\\" x2=\\"5.64\\" y1=\\"4.22\\" y2=\\"5.64\\">\\n     </line>\\n     <line x1=\\"18.36\\" x2=\\"19.78\\" y1=\\"18.36\\" y2=\\"19.78\\">\\n     </line>\\n     <line x1=\\"1\\" x2=\\"3\\" y1=\\"12\\" y2=\\"12\\">\\n     </line>\\n     <line x1=\\"21\\" x2=\\"23\\" y1=\\"12\\" y2=\\"12\\">\\n     </line>\\n     <line x1=\\"4.22\\" x2=\\"5.64\\" y1=\\"19.78\\" y2=\\"18.36\\">\\n     </line>\\n     <line x1=\\"18.36\\" x2=\\"19.78\\" y1=\\"5.64\\" y2=\\"4.22\\">\\n     </line>\\n    </svg>\\n   </symbol>\\n  </svg>\\n  <script>\\n   document.documentElement.dataset.colour_scheme = localStorage.getItem(\\"colour_scheme\\") || \\"auto\\"\\n  <\/script>\\n  <section id=\\"pep-page-section\\">\\n   <header>\\n    <h1>\\n     Python Enhancement Proposals\\n    </h1>\\n    <ul class=\\"breadcrumbs\\">\\n     <li>\\n      <a href=\\"https://www.python.org/\\" title=\\"The Python Programming Language\\">\\n       Python\\n      </a>\\n      \xbb\\n     </li>\\n     <li>\\n      <a href=\\"../pep-0000/\\">\\n       PEP Index\\n      </a>\\n      \xbb\\n     </li>\\n     <li>\\n      PEP 20\\n     </li>\\n    </ul>\\n    <button id=\\"colour-scheme-cycler\\" onclick=\\"setColourScheme(nextColourScheme())\\">\\n     <svg aria-hidden=\\"true\\" class=\\"colour-scheme-icon-when-auto\\">\\n      <use href=\\"#svg-sun-half\\">\\n      </use>\\n     </svg>\\n     <svg aria-hidden=\\"true\\" class=\\"colour-scheme-icon-when-dark\\">\\n      <use href=\\"#svg-moon\\">\\n      </use>\\n     </svg>\\n     <svg aria-hidden=\\"true\\" class=\\"colour-scheme-icon-when-light\\">\\n      <use href=\\"#svg-sun\\">\\n      </use>\\n     </svg>\\n     <span class=\\"visually-hidden\\">\\n      Toggle light / dark / auto colour theme\\n     </span>\\n    </button>\\n   </header>\\n   <article>\\n    <section id=\\"pep-content\\">\\n     <h1 class=\\"page-title\\">\\n      PEP 20 \u2013 The Zen of Python\\n     </h1>\\n     <dl class=\\"rfc2822 field-list simple\\">\\n      <dt class=\\"field-odd\\">\\n       Author\\n       <span class=\\"colon\\">\\n        :\\n       </span>\\n      </dt>\\n      <dd class=\\"field-odd\\">\\n       Tim Peters &lt;tim.peters at gmail.com&gt;\\n      </dd>\\n      <dt class=\\"field-even\\">\\n       Status\\n       <span class=\\"colon\\">\\n        :\\n       </span>\\n      </dt>\\n      <dd class=\\"field-even\\">\\n       <abbr title=\\"Currently valid informational guidance, or an in-use process\\">\\n        Active\\n       </abbr>\\n      </dd>\\n      <dt class=\\"field-odd\\">\\n       Type\\n       <span class=\\"colon\\">\\n        :\\n       </span>\\n      </dt>\\n      <dd class=\\"field-odd\\">\\n       <abbr title=\\"Non-normative PEP containing background, guidelines or other information relevant to the Python ecosystem\\">\\n        Informational\\n       </abbr>\\n      </dd>\\n      <dt class=\\"field-even\\">\\n       Created\\n       <span class=\\"colon\\">\\n        :\\n       </span>\\n      </dt>\\n      <dd class=\\"field-even\\">\\n       19-Aug-2004\\n      </dd>\\n      <dt class=\\"field-odd\\">\\n       Post-History\\n       <span class=\\"colon\\">\\n        :\\n       </span>\\n      </dt>\\n      <dd class=\\"field-odd\\">\\n       22-Aug-2004\\n      </dd>\\n     </dl>\\n     <hr class=\\"docutils\\"/>\\n     <section id=\\"contents\\">\\n      <details>\\n       <summary>\\n        Table of Contents\\n       </summary>\\n       <ul class=\\"simple\\">\\n        <li>\\n         <a class=\\"reference internal\\" href=\\"#abstract\\">\\n          Abstract\\n         </a>\\n        </li>\\n        <li>\\n         <a class=\\"reference internal\\" href=\\"#the-zen-of-python\\">\\n          The Zen of Python\\n         </a>\\n        </li>\\n        <li>\\n         <a class=\\"reference internal\\" href=\\"#easter-egg\\">\\n          Easter Egg\\n         </a>\\n        </li>\\n        <li>\\n         <a class=\\"reference internal\\" href=\\"#references\\">\\n          References\\n         </a>\\n        </li>\\n        <li>\\n         <a class=\\"reference internal\\" href=\\"#copyright\\">\\n          Copyright\\n         </a>\\n        </li>\\n       </ul>\\n      </details>\\n     </section>\\n     <section id=\\"abstract\\">\\n      <h2>\\n       <a class=\\"toc-backref\\" href=\\"#abstract\\" role=\\"doc-backlink\\">\\n        Abstract\\n       </a>\\n      </h2>\\n      <p>\\n       Long time Pythoneer Tim Peters succinctly channels the BDFL\u2019s guiding\\nprinciples for Python\u2019s design into 20 aphorisms, only 19 of which\\nhave been written down.\\n      </p>\\n     </section>\\n     <section id=\\"the-zen-of-python\\">\\n      <h2>\\n       <a class=\\"toc-backref\\" href=\\"#the-zen-of-python\\" role=\\"doc-backlink\\">\\n        The Zen of Python\\n       </a>\\n      </h2>\\n      <div class=\\"highlight-text notranslate\\">\\n       <div class=\\"highlight\\">\\n        <pre><span></span>Beautiful is better than ugly.\\nExplicit is better than implicit.\\nSimple is better than complex.\\nComplex is better than complicated.\\nFlat is better than nested.\\nSparse is better than dense.\\nReadability counts.\\nSpecial cases aren\'t special enough to break the rules.\\nAlthough practicality beats purity.\\nErrors should never pass silently.\\nUnless explicitly silenced.\\nIn the face of ambiguity, refuse the temptation to guess.\\nThere should be one-- and preferably only one --obvious way to do it.\\nAlthough that way may not be obvious at first unless you\'re Dutch.\\nNow is better than never.\\nAlthough never is often better than *right* now.\\nIf the implementation is hard to explain, it\'s a bad idea.\\nIf the implementation is easy to explain, it may be a good idea.\\nNamespaces are one honking great idea -- let\'s do more of those!\\n</pre>\\n       </div>\\n      </div>\\n     </section>\\n     <section id=\\"easter-egg\\">\\n      <h2>\\n       <a class=\\"toc-backref\\" href=\\"#easter-egg\\" role=\\"doc-backlink\\">\\n        Easter Egg\\n       </a>\\n      </h2>\\n      <div class=\\"highlight-pycon notranslate\\">\\n       <div class=\\"highlight\\">\\n        <pre><span></span><span class=\\"gp\\">&gt;&gt;&gt; </span><span class=\\"kn\\">import</span> <span class=\\"nn\\">this</span>\\n</pre>\\n       </div>\\n      </div>\\n     </section>\\n     <section id=\\"references\\">\\n      <h2>\\n       <a class=\\"toc-backref\\" href=\\"#references\\" role=\\"doc-backlink\\">\\n        References\\n       </a>\\n      </h2>\\n      <p>\\n       Originally posted to\\n       <a class=\\"reference external\\" href=\\"mailto:comp.lang.python/python-list%40python.org\\">\\n        comp\\n        <span>\\n         .\\n        </span>\\n        lang\\n        <span>\\n         .\\n        </span>\\n        python/python-list\\n        <span>\\n         @\\n        </span>\\n        python\\n        <span>\\n         .\\n        </span>\\n        org\\n       </a>\\n       under a\\nthread called\\n       <a class=\\"reference external\\" href=\\"https://groups.google.com/d/msg/comp.lang.python/B_VxeTBClM0/L8W9KlsiriUJ\\">\\n        \u201cThe Way of Python\u201d\\n       </a>\\n      </p>\\n     </section>\\n     <section id=\\"copyright\\">\\n      <h2>\\n       <a class=\\"toc-backref\\" href=\\"#copyright\\" role=\\"doc-backlink\\">\\n        Copyright\\n       </a>\\n      </h2>\\n      <p>\\n       This document has been placed in the public domain.\\n      </p>\\n     </section>\\n    </section>\\n    <hr class=\\"docutils\\"/>\\n    <p>\\n     Source:\\n     <a class=\\"reference external\\" href=\\"https://github.com/python/peps/blob/main/pep-0020.txt\\">\\n      https://github.com/python/peps/blob/main/pep-0020.txt\\n     </a>\\n    </p>\\n    <p>\\n     Last modified:\\n     <a class=\\"reference external\\" href=\\"https://github.com/python/peps/commits/main/pep-0020.txt\\">\\n      2022-03-15 17:40:34+00:00 GMT\\n     </a>\\n    </p>\\n   </article>\\n   <nav id=\\"pep-sidebar\\">\\n    <h2>\\n     Contents\\n    </h2>\\n    <ul>\\n     <li>\\n      <a class=\\"reference internal\\" href=\\"#abstract\\">\\n       Abstract\\n      </a>\\n     </li>\\n     <li>\\n      <a class=\\"reference internal\\" href=\\"#the-zen-of-python\\">\\n       The Zen of Python\\n      </a>\\n     </li>\\n     <li>\\n      <a class=\\"reference internal\\" href=\\"#easter-egg\\">\\n       Easter Egg\\n      </a>\\n     </li>\\n     <li>\\n      <a class=\\"reference internal\\" href=\\"#references\\">\\n       References\\n      </a>\\n     </li>\\n     <li>\\n      <a class=\\"reference internal\\" href=\\"#copyright\\">\\n       Copyright\\n      </a>\\n     </li>\\n    </ul>\\n    <br/>\\n    <a href=\\"https://github.com/python/peps/blob/main/pep-0020.txt\\" id=\\"source\\">\\n     Page Source (GitHub)\\n    </a>\\n   </nav>\\n  </section>\\n  <script src=\\"../_static/colour_scheme.js\\">\\n  <\/script>\\n  <script src=\\"../_static/wrap_tables.js\\">\\n  <\/script>\\n  <script src=\\"../_static/sticky_banner.js\\">\\n  <\/script>\\n </body>\\n</html>\\n```\\n\\n## 5. Navegar por el contenido {#navegar-por-el-contenido}\\n\\nUna vez que tenemos el contenido de la p\xe1gina, podemos navegar por el\\ncontenido usando los m\xe9todos `find()` y `find_all()`.\\n\\n``` python\\na = soup.find_all(\'a\')\\nfor link in a:\\n    print(link.get(\'href\'))\\n```\\n\\n``` text\\nhttps://www.python.org/\\n../pep-0000/\\n#abstract\\n#the-zen-of-python\\n#easter-egg\\n#references\\n#copyright\\n#abstract\\n#the-zen-of-python\\n#easter-egg\\n#references\\nmailto:comp.lang.python/python-list%40python.org\\nhttps://groups.google.com/d/msg/comp.lang.python/B_VxeTBClM0/L8W9KlsiriUJ\\n#copyright\\nhttps://github.com/python/peps/blob/main/pep-0020.txt\\nhttps://github.com/python/peps/commits/main/pep-0020.txt\\n#abstract\\n#the-zen-of-python\\n#easter-egg\\n#references\\n#copyright\\nhttps://github.com/python/peps/blob/main/pep-0020.txt\\n```\\n\\nPara navegar por el contenido del documento, `BeautifulSoup` tiene\\nvarios m\xe9todos que nos permiten navegar por el contenido del documento,\\nlos m\xe1s usados son:\\n\\n-   `find()`: Nos permite encontrar el primer elemento que cumpla con\\n    las condiciones especificadas.\\n-   `find_all()`: Nos permite encontrar todos los elementos que cumplan\\n    con las condiciones especificadas.\\n-   `select()`: Nos permite encontrar todos los elementos que cumplan\\n    con las condiciones especificadas usando selectores CSS.\\n-   `select_one()`: Nos permite encontrar el primer elemento que cumpla\\n    con las condiciones especificadas usando selectores CSS.\\n-   `find_parent()`: Nos permite encontrar el elemento padre que cumpla\\n    con las condiciones especificadas.\\n-   `find_parents()`: Nos permite encontrar todos los elementos padres\\n    que cumplan con las condiciones especificadas.\\n\\nEntre otros, para mas informaci\xf3n ir a la\\n[documentaci\xf3n](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)\\n\\n``` python\\n# buscar elementos a por class\\nelements = soup.find_all(\'a\', {\'class\': \'reference internal\'})\\nfor element in elements:\\n    print(element.get(\'href\'))\\n```\\n\\n``` text\\n#abstract\\n#the-zen-of-python\\n#easter-egg\\n#references\\n#copyright\\n#abstract\\n#the-zen-of-python\\n#easter-egg\\n#references\\n#copyright\\n```\\n\\n``` python\\n# buscar elementos por id\\nelements = soup.find_all(id = \'copyright\')\\nprint(elements)\\n```\\n\\n``` text\\n[<section id=\\"copyright\\">\\n<h2><a class=\\"toc-backref\\" href=\\"#copyright\\" role=\\"doc-backlink\\">Copyright</a></h2>\\n<p>This document has been placed in the public domain.</p>\\n</section>]\\n```\\n\\n``` python\\n# buscar elementos por texto\\nelements = soup.find_all(string=\'PEP 20\')\\nelements\\n```\\n\\n``` text\\n[]\\n```\\n\\n``` python\\n# buscar elementos por texto con expresiones regulares\\nimport re\\nelements = soup.find_all(re.compile(\'^sy\'))\\nelements\\n```\\n\\n``` text\\n[<symbol id=\\"svg-sun-half\\" pointer-events=\\"all\\" viewbox=\\"0 0 24 24\\">\\n <title>Following system colour scheme</title>\\n <svg fill=\\"none\\" stroke=\\"currentColor\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" viewbox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n <circle cx=\\"12\\" cy=\\"12\\" r=\\"9\\"></circle>\\n <path d=\\"M12 3v18m0-12l4.65-4.65M12 14.3l7.37-7.37M12 19.6l8.85-8.85\\"></path>\\n </svg>\\n </symbol>,\\n <symbol id=\\"svg-moon\\" pointer-events=\\"all\\" viewbox=\\"0 0 24 24\\">\\n <title>Selected dark colour scheme</title>\\n <svg fill=\\"none\\" stroke=\\"currentColor\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" viewbox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n <path d=\\"M0 0h24v24H0z\\" fill=\\"none\\" stroke=\\"none\\"></path>\\n <path d=\\"M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z\\"></path>\\n </svg>\\n </symbol>,\\n <symbol id=\\"svg-sun\\" pointer-events=\\"all\\" viewbox=\\"0 0 24 24\\">\\n <title>Selected light colour scheme</title>\\n <svg fill=\\"none\\" stroke=\\"currentColor\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" viewbox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n <circle cx=\\"12\\" cy=\\"12\\" r=\\"5\\"></circle>\\n <line x1=\\"12\\" x2=\\"12\\" y1=\\"1\\" y2=\\"3\\"></line>\\n <line x1=\\"12\\" x2=\\"12\\" y1=\\"21\\" y2=\\"23\\"></line>\\n <line x1=\\"4.22\\" x2=\\"5.64\\" y1=\\"4.22\\" y2=\\"5.64\\"></line>\\n <line x1=\\"18.36\\" x2=\\"19.78\\" y1=\\"18.36\\" y2=\\"19.78\\"></line>\\n <line x1=\\"1\\" x2=\\"3\\" y1=\\"12\\" y2=\\"12\\"></line>\\n <line x1=\\"21\\" x2=\\"23\\" y1=\\"12\\" y2=\\"12\\"></line>\\n <line x1=\\"4.22\\" x2=\\"5.64\\" y1=\\"19.78\\" y2=\\"18.36\\"></line>\\n <line x1=\\"18.36\\" x2=\\"19.78\\" y1=\\"5.64\\" y2=\\"4.22\\"></line>\\n </svg>\\n </symbol>]\\n```\\n\\n## 6. Conclusiones {#conclusiones}\\n\\nComo hemos visto, `BeautifulSoup` es una librer\xeda muy poderosa que nos\\npermite extraer informaci\xf3n de p\xe1ginas web de una forma rapida y\\nsencilla, pero tiene sus limitaciones y no es la mejor opci\xf3n para\\nextraer informaci\xf3n de p\xe1ginas web complejas, para ello existen otras\\nlibrer\xedas como `Scrapy` que nos permiten extraer informaci\xf3n de p\xe1ginas\\nweb de una forma m\xe1s eficiente.\\n\\nCuando hagamos scraping de p\xe1ginas web, debes de tener en cuenta que\\ntienes que respetar las pol\xedticas de privacidad de la p\xe1gina web, para\\nello debes de leer los t\xe9rminos y condiciones de la p\xe1gina web, asi como\\nel acceso a los robots de b\xfasqueda, del archivo `robots.txt` de la\\np\xe1gina web."},{"id":"arboles-decision-ensamble","metadata":{"permalink":"/article/arboles-decision-ensamble","source":"@site/blog/arboles-decision-ensamble.md","title":"Arboles de decisi\xf3n y m\xe9todos de ensamble","description":"\xbfQue es un \xe1rbol de decisi\xf3n?","date":"2023-06-27T00:00:00.000Z","formattedDate":"27 de junio de 2023","tags":[{"label":"arboles de decisi\xf3n","permalink":"/article/tags/arboles-de-decision"},{"label":"metodos de ensamble","permalink":"/article/tags/metodos-de-ensamble"},{"label":"machine learning","permalink":"/article/tags/machine-learning"}],"readingTime":3.71,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Arboles de decisi\xf3n y m\xe9todos de ensamble","decription":"Introducci\xf3n a los arboles de decisi\xf3n y m\xe9todos de ensamble","slug":"arboles-decision-ensamble","date":"2023-06-27T00:00:00.000Z","authors":["ccdarvin"],"tags":["arboles de decisi\xf3n","metodos de ensamble","machine learning"]},"prevItem":{"title":"Scraping web con BeautifulSoup","permalink":"/article/scraping-with-BeautifulSoup"},"nextItem":{"title":"Brocasting con Numpy","permalink":"/article/brocasting-con-numpy"}},"content":"## \xbfQue es un \xe1rbol de decisi\xf3n?\\n\\nUn \xe1rbol de decisi\xf3n es un modelo de predicci\xf3n utilizado en el \xe1mbito de la inteligencia artificial. Dada una base de datos se construye un \xe1rbol de decisi\xf3n para poder llegar a la conclusi\xf3n deseada. Es una herramienta de apoyo para la toma de decisiones.\\n\\n## \xbfQue es un m\xe9todo de ensamblaje?\\n\\nLos m\xe9todos de ensamblaje son m\xe9todos que combinan varios algoritmos de aprendizaje autom\xe1tico para obtener un mejor rendimiento predictivo que un solo algoritmo de aprendizaje autom\xe1tico. Los m\xe9todos de ensamblaje funcionan mejor cuando los predictores individuales est\xe1n correlacionados entre s\xed.\\n\\n\\n### Muestras con reemplazo\\n\\nEn estad\xedstica, el muestreo con reemplazo es un m\xe9todo de muestreo en el que, para cada extracci\xf3n, el elemento elegido se devuelve a la poblaci\xf3n y se mezcla con el resto de elementos. El muestreo con reemplazo es un m\xe9todo de muestreo no exhaustivo.\\n\\n$$P(x_i) = \\\\frac{1}{N}$$\\n\\nEn arboles de decisi\xf3n se utiliza el muestreo con reemplazo para generar los \xe1rboles de decisi\xf3n que se utilizaran para el ensamblaje, es decir, se generan varios \xe1rboles de decisi\xf3n con muestras de la base de datos original, y se combinan para generar un modelo m\xe1s robusto.\\n\\n\\n## Random Forest\\n\\nRandom Forest es un m\xe9todo de ensamblaje que combina varios \xe1rboles de decisi\xf3n, cada uno de los cuales se genera con una muestra de la base de datos original, y se combinan para generar un modelo m\xe1s robusto. esteme metodo usa el muestreo con reemplazo para generar los \xe1rboles de decisi\xf3n.\\n\\nTenemos un datos de entrenamiento de tama\xf1o $m$\\n* para b = 1 hasta B: Utilizamos el muestreo con reemplazo para generar una muestra de tama\xf1o $m$ de la base de datos original. Entrenamos un \xe1rbol de decisi\xf3n $T_b$ con la muestra generada.\\n* Se obtiene el modelo final combinando los $B$ \xe1rboles de decisi\xf3n generados.\\n\\n\\nCuando usamos este algorithmo, muchas veces tenemos la misma divisi\xf3n en el nodo ra\xedz, por lo que podemos modificar un poco el algorithmo para que esto no suceda, y as\xed obtener un mejor modelo.\\n\\n### Elecci\xf3n de caracter\xedsticas aleatorias\\n\\nEn cada nodo, se elige un subconjunto aleatorio de $k$ caracter\xedsticas de todo el conjunto de caracter\xedsticas. si $n$ es el n\xfamero total de caracter\xedsticas, se recomienda $k = \\\\sqrt{n}$ para la regresi\xf3n y $k = \\\\frac{n}{3}$ para la clasificaci\xf3n, debe de tener en cuenta que esto es recomendado para un gran n\xfamero de caracter\xedsticas\\n\\n## XGBoost ( ExTreme Gradient Boosting)\\n\\nXGBoost es un m\xe9todo de ensamblaje que combina varios \xe1rboles de decisi\xf3n, cada uno de los cuales se genera con una muestra de la base de datos original, y se combinan para generar un modelo m\xe1s robusto. este metodo usa el muestreo con reemplazo para generar los \xe1rboles de decisi\xf3n.\\n\\nPero a diferencia de Random Forest, XGBoost utiliza un algorithmo de optimizaci\xf3n para generar los \xe1rboles de decisi\xf3n, En vez de utilizar el muestreo con reemplazo para generar los \xe1rboles de decisi\xf3n con una probabilidad uniforme $1/m$, XGBoost utiliza un algorithmo de optimizaci\xf3n para generar los \xe1rboles de decisi\xf3n con una probabilidad $p_i$ que depende de la p\xe9rdida de la iteraci\xf3n anterior.\\n\\n$$p_i = \\\\frac{e^{\\\\frac{-\\\\Delta L_i}{\\\\lambda}}}{\\\\sum_{i=1}^{m} e^{\\\\frac{-\\\\Delta L_i}{\\\\lambda}}}$$\\n\\nDonde:\\n* $\\\\Delta L_i$ es la p\xe9rdida de la iteraci\xf3n $i$\\n* $\\\\lambda$ es un par\xe1metro de regularizaci\xf3n\\n\\nLa idea de esto es que el algorithmo de optimizaci\xf3n se enfoque en las muestras que tienen una p\xe9rdida mayor, y as\xed generar un mejor modelo.\\n\\n### Ventajas de XGBoost\\n\\n* Implementaci\xf3nes open source en varios lenguajes de programaci\xf3n\\n* Rapidez en el entrenamiento\\n* Buena elecci\xf3n de divisi\xf3nes criticas por defecto y criterio para cuando parar de dividir\\n* Regularizaci\xf3n para evitar el sobreajuste\\n\\n### Implementaci\xf3n en Python\\n\\nPara la implementaci\xf3n en Python, se utilizara la librer\xeda XGBoost, la cual se puede instalar con el comando:\\n\\n```python\\nfrom xgboost import XGBClassifier\\nmodel = XGBClassifier() # XGBRegressor para regresi\xf3n\\nmodel.fit(X_train, y_train)\\ny_pred = model.predict(X_test)\\n```\\n\\n## Cuando usar Arboles de decisi\xf3n y m\xe9todos de ensamblaje\\n\\n* Trabajan bien con datos tabulares (estructurados)\\n* No se recomienda para datos no estructurados (im\xe1genes, texto, audio, etc)\\n* Es muy r\xe1pido en entrenamiento y predicci\xf3n\\n* Peque\xf1os arboles de decisi\xf3n son f\xe1ciles de interpretar (visualizar)\\n\\n## Cuando usar neural networks\\n\\n* Trabaja bien con todo tipo de datos tabulares \\"estructurados\\" y \\"no estructurados\\"\\n* Puede ser lento en entrenamiento y predicci\xf3n\\n* Trabaja con transfer learning\\n* Cuando trabajamos con multiples modelos juntos, puede ser mas sencillo encadenarlos con una red neuronal"},{"id":"brocasting-con-numpy","metadata":{"permalink":"/article/brocasting-con-numpy","source":"@site/blog/broadcasting-con-numpy.md","title":"Brocasting con Numpy","description":"broadcasting-con-numpy}","date":"2023-06-20T00:00:00.000Z","formattedDate":"20 de junio de 2023","tags":[{"label":"numpy","permalink":"/article/tags/numpy"},{"label":"broadcasting","permalink":"/article/tags/broadcasting"},{"label":"python","permalink":"/article/tags/python"}],"readingTime":10.35,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Brocasting con Numpy","slug":"brocasting-con-numpy","authors":["ccdarvin"],"tags":["numpy","broadcasting","python"],"date":"2023-06-20T00:00:00.000Z"},"prevItem":{"title":"Arboles de decisi\xf3n y m\xe9todos de ensamble","permalink":"/article/arboles-decision-ensamble"},"nextItem":{"title":"Detecci\xf3n de anomal\xedas","permalink":"/article/ml-deteccion-de-anomalias"}},"content":"export const quartoRawHtml =\\n[`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\">Broadcasting de 1<span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0x5</span> + 1x5\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\"><span style=\\"font-weight: bold\\">[[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">2</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">1</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">4</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">2</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">4</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">1</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">2</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span><span style=\\"font-weight: bold\\">]]</span>\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\">Broadcasting de 1<span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0x5</span> + <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\"><span style=\\"font-weight: bold\\">[[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">2</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">18</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">13</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">4</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">18</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">17</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">1</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">18</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">2</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">2</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">16</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">17</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">18</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">15</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span><span style=\\"font-weight: bold\\">]]</span>\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\">Broadcasting de 1<span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0x5</span> + 1<span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0x1</span>\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\"><span style=\\"font-weight: bold\\">[[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">1</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">13</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">13</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">15</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">1</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">3</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">1</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">1</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">16</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">17</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span><span style=\\"font-weight: bold\\">]]</span>\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\"><span style=\\"font-weight: bold\\">[[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">13</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">6</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">7</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">9</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">5</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">13</span>  <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">8</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">11</span><span style=\\"font-weight: bold\\">]</span>\\n <span style=\\"font-weight: bold\\">[</span><span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">12</span> <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">14</span><span style=\\"font-weight: bold\\">]]</span>\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\">Broadcasting de 1<span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0x5</span> + 5x10\\n</pre>`,`<pre style=\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,\'DejaVu Sans Mono\',consolas,\'Courier New\',monospace\\">Broadcasting de 1<span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">0x5</span> + <span style=\\"color: #008080; text-decoration-color: #008080; font-weight: bold\\">10</span>\\n</pre>`];\\n\\n# Broadcasting con NumPy {#broadcasting-con-numpy}\\n\\n![image.png](broadcasting-con-numpy_files/figure-markdown_strict/f80bb9be-1-image.png)\\n\\nEl broadcasting es una forma de hacer operaciones entre arrays de\\ndiferentes tama\xf1os, que usualmente no son compatibles. El broadcasting\\nes posible cuando se cumplen ciertas reglas.\\n\\n-   El tama\xf1o de cada dimensi\xf3n es igual.\\n-   Una de las dimensiones es 1.\\n\\nEl broadcasting se realiza en la dimensi\xf3n que tiene tama\xf1o 1. El array\\ncon tama\xf1o 1 se extiende para que tenga el mismo tama\xf1o que el otro\\narray.\\n\\n## Ejemplos de broadcasting {#ejemplos-de-broadcasting}\\n\\n| Array 1 | Array 2 | Resultado |\\n|---------|---------|-----------|\\n| 10 x 5  | 1 x 5   | 10 x 5    |\\n| 10 x 5  | 5       | 10 x 5    |\\n| 10 x 5  | 10 x 1  | 10 x 5    |\\n| 10 x 5  | scalar  | 10 x 5    |\\n\\n``` python\\nimport numpy as np\\nfrom rich import print\\n# matris de 10x5 \\nm10_5 = np.random.randint(0, 10, (10, 5))\\nm1_5 = np.random.randint(0, 10, (1, 5))\\nm5 = np.random.randint(0, 10, (5))\\nm10_1 = np.random.randint(0, 10, (10, 1))\\nscalar = 5\\n\\nprint(\'Broadcasting de 10x5 + 1x5\')\\nprint(m10_5 + m1_5)\\nprint(\'Broadcasting de 10x5 + 5\')\\nprint(m10_5 + m5)\\nprint(\'Broadcasting de 10x5 + 10x1\')\\nprint(m10_5 + m10_1)\\nprint(m10_5 + scalar)\\n```\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[0] }} />\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[1] }} />\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[2] }} />\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[3] }} />\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[4] }} />\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[5] }} />\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[6] }} />\\n\\n## Ejemplos de no broadcasting {#ejemplos-de-no-broadcasting}\\n\\n| Array 1 | Array 2 | Resultado |\\n|---------|---------|-----------|\\n| 10 x 5  | 5 x 10  | Error     |\\n| 10 x 5  | 10      | Error     |\\n\\n``` python\\nm10_5 = np.random.randint(0, 10, (10, 5))\\nm5_10 = np.random.randint(0, 10, (5, 10))\\nm10 = np.random.randint(0, 10, (10))\\n\\nprint(\'Broadcasting de 10x5 + 5x10\')\\nprint(m10_5 + m5_10)\\n```\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[7] }} />\\n\\n``` text\\nValueError: operands could not be broadcast together with shapes (10,5) (5,10) \\n```\\n\\n``` python\\nprint(\'Broadcasting de 10x5 + 10\')\\nprint(m10_5 + m10)\\n```\\n\\n<div dangerouslySetInnerHTML={{ __html: quartoRawHtml[8] }} />\\n\\n``` text\\nValueError: operands could not be broadcast together with shapes (10,5) (10,) \\n```"},{"id":"ml-deteccion-de-anomalias","metadata":{"permalink":"/article/ml-deteccion-de-anomalias","source":"@site/blog/ml-deteccion-de-anomalias.md","title":"Detecci\xf3n de anomal\xedas","description":"La detecci\xf3n de anomal\xedas es el proceso de identificar patrones","date":"2023-06-20T00:00:00.000Z","formattedDate":"20 de junio de 2023","tags":[{"label":"machine learning","permalink":"/article/tags/machine-learning"},{"label":"python","permalink":"/article/tags/python"}],"readingTime":2.55,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Detecci\xf3n de anomal\xedas","slug":"ml-deteccion-de-anomalias","date":"2023-06-20T00:00:00.000Z","authors":["ccdarvin"],"tags":["machine learning","python"]},"prevItem":{"title":"Brocasting con Numpy","permalink":"/article/brocasting-con-numpy"},"nextItem":{"title":"Expresiones regulares en Python","permalink":"/article/expresiones-regulares-python"}},"content":"La detecci\xf3n de anomal\xedas es el proceso de identificar patrones\\ninusuales en los datos. Es un problema de aprendizaje no supervisado, lo\\nque significa que no necesitamos tener etiquetas para entrenar nuestro\\nmodelo. En cambio, nuestro modelo aprender\xe1 a identificar patrones\\ninusuales en los datos por s\xed mismo.\\n\\nLa detecci\xf3n de anomal\xedas se puede aplicar a una amplia gama de\\ndominios, como la detecci\xf3n de fraudes con tarjetas de cr\xe9dito, la\\ndetecci\xf3n de fallas en equipos de fabricaci\xf3n o la detecci\xf3n de\\nanomal\xedas m\xe9dicas.\\n\\n## Estimaci\xf3n de densidad {#estimaci\xf3n-de-densidad}\\n\\nLa detecci\xf3n de anomal\xedas se puede realizar utilizando un modelo de\\nestimaci\xf3n de densidad. La idea es que los datos normales se\\ndistribuir\xe1n de manera diferente a los datos anormales. Por lo tanto,\\npodemos estimar la densidad de los datos normales y luego identificar\\nlos puntos de datos que tienen una densidad significativamente menor\\ncomo anomal\xedas.\\n\\nDado el conjunto de datos de entrenamiento\\n$\\\\{x^{(1)}, x^{(2)}, \\\\ldots, x^{(m)} \\\\}$, donde cada ejemplo tiene $n$\\ncaracter\xedsticas, podemos estimar la densidad de los datos como:\\n\\n$$p(x) = p(x_1; \\\\mu_1, \\\\sigma_1^2) \\\\times p(x_2; \\\\mu_2, \\\\sigma_2^2) \\\\times \\\\ldots \\\\times p(x_n; \\\\mu_n, \\\\sigma_n^2)$$\\n$$= \\\\prod_{j=1}^n p(x_j; \\\\mu_j, \\\\sigma_j^2)$$\\n\\n## Algoritmo de detecci\xf3n de anomal\xedas {#algoritmo-de-detecci\xf3n-de-anomal\xedas}\\n\\n1.  Elija las caracter\xedsticas $x_i$ que crea que pueden indicar\\n    anomal\xedas.\\n\\n2.  Ajuste los par\xe1metros\\n    $\\\\mu_1, \\\\ldots, \\\\mu_n, \\\\sigma_1^2, \\\\ldots, \\\\sigma_n^2$ en el\\n    conjunto de entrenamiento $\\\\{x^{(1)}, x^{(2)}, \\\\ldots, x^{(m)} \\\\}$.\\n    $$\\\\vec{\\\\mu} = \\\\frac{1}{m} \\\\sum_{i=1}^m \\\\vec{x^{(i)}}$$\\n    $$\\\\vec{\\\\sigma^2} = \\\\frac{1}{m} \\\\sum_{i=1}^m (\\\\vec{x^{(i)}} - \\\\vec{\\\\mu})^2$$\\n\\n3.  Dado un nuevo ejemplo $x$, compute $p(x)$:\\n\\n$$p(x) = \\\\prod_{j=1}^n p(x_j; \\\\mu_j, \\\\sigma_j^2) = \\\\prod_{j=1}^n \\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_j} \\\\exp \\\\left( - \\\\frac{(x_j - \\\\mu_j)^2}{2\\\\sigma_j^2} \\\\right)$$\\n\\n1.  Si $p(x) < \\\\epsilon$, marque un ejemplo de anomal\xeda.\\n\\n![image.png](ml-deteccion-de-anomalias_files/figure-markdown_strict/c58c4e3d-1-image.png)\\n\\n## Escoger que caracteristicas usar {#escoger-que-caracteristicas-usar}\\n\\nEn Deteci\xf3n de Anomal\xedas, se debe escoger que caracteristicas usar, ya\\nque si se usan todas las caracteristicas, el algoritmo no funcionar\xe1\\ncorrectamentem.\\n\\n### Caracteristicas no gaussianas {#caracteristicas-no-gaussianas}\\n\\nCuando encontramos caracteristicas que no son gaussianas, se debe\\naplicar una transformaci\xf3n a los datos para que se vuelvan gaussianos.\\n\\npor ejemplo:\\n\\n-   $x_1 = \\\\log(x_1)$\\n-   $x_2 = \\\\log(x_2 + c)$\\n-   $x_3 = \\\\sqrt{x_3}$\\n-   $x_4 = x_4^{1/3}$\\n\\nEn python\\n\\n``` python\\nfrom scipy.stats import skewnorm\\nimport matplotlib.pyplot as plt\\n\\nnumValues = 1000\\nmaxValue = 100\\nskewness = 20\\n\\nrandomValues = skewnorm.rvs(a=skewness, loc=maxValue, size=numValues)\\n\\nrandomValues = randomValues - min(randomValues) # cambia el conjunto de datos para que comience en 0\\nrandomValues = randomValues / max(randomValues) # cambia el conjunto de datos para que termine en 1\\nrandomValues = randomValues * maxValue # cambia el conjunto de datos para que termine en maxValue\\n\\nx = randomValues\\n\\nfig, ax = plt.subplots(1, 3, figsize=(15, 5))\\n\\nax[0].hist(x, bins=50)\\nax[0].set_title(\'X\')\\n\\n# x**2\\nax[1].hist(x**2, bins=50)\\nax[1].set_title(\'X^2\')\\n\\n# x**0.4\\nax[2].hist(x**0.4, bins=50)\\nax[2].set_title(\'X^0.4\')\\n\\nplt.show()\\n```\\n\\n![](ml-deteccion-de-anomalias_files/figure-markdown_strict/cell-2-output-1.png)\\n\\n### Error en el analisis para detecci\xf3n de anomal\xedas {#error-en-el-analisis-para-detecci\xf3n-de-anomal\xedas}\\n\\nEl problema m\xe1s com\xfan en la detecci\xf3n de anomal\xedas es que el conjunto de\\ndatos de entrenamiento contiene muy pocos ejemplos de anomal\xedas. Por lo\\ntanto, el algoritmo de detecci\xf3n de anomal\xedas no puede aprender lo\\nsuficiente sobre los ejemplos de anomal\xedas para identificarlos\\ncorrectamente en el conjunto de prueba."},{"id":"expresiones-regulares-python","metadata":{"permalink":"/article/expresiones-regulares-python","source":"@site/blog/Regex en Python.md","title":"Expresiones regulares en Python","description":"Las expresiones regulares son una secuencia de caracteres que forman un","date":"2023-06-08T00:00:00.000Z","formattedDate":"8 de junio de 2023","tags":[{"label":"python","permalink":"/article/tags/python"},{"label":"Expresiones regulares","permalink":"/article/tags/expresiones-regulares"}],"readingTime":3.03,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Expresiones regulares en Python","slug":"expresiones-regulares-python","date":"2023-06-08T00:00:00.000Z","authors":["ccdarvin"],"tags":["python","Expresiones regulares"]},"prevItem":{"title":"Detecci\xf3n de anomal\xedas","permalink":"/article/ml-deteccion-de-anomalias"},"nextItem":{"title":"Clustering","permalink":"/article/introduccion-a-los-algoritmos-de-clustering"}},"content":"Las expresiones regulares son una secuencia de caracteres que forman un\\npatr\xf3n de b\xfasqueda, principalmente utilizadas para la b\xfasqueda de\\npatrones de cadenas de caracteres u operaciones de sustituciones.\\n\\n## Caracteres especiales {#caracteres-especiales}\\n\\nLos caracteres especiales son aquellos que tienen un significado\\nespecial para las expresiones regulares. Por ejemplo, el punto y coma\\n(;) es un caracter especial que se utiliza para separar instrucciones en\\nPython. Sin embargo, en las expresiones regulares, el punto y coma (;)\\nes un caracter especial que se utiliza para indicar que el patr\xf3n de\\nb\xfasqueda debe coincidir con cualquier caracter.\\n\\nA continuaci\xf3n se muestra una lista de los caracteres especiales m\xe1s\\nutilizados en las expresiones regulares:\\n\\n| Caracter                                  | Descripci\xf3n                                                         |\\n|------------------------------------|------------------------------------|\\n| .                                         | Coincide con cualquier caracter                                     |\\n| ^                                         | Coincide con el inicio de una cadena                                |\\n| \\\\$                                        | Coincide con el final de una cadena                                 |\\n| \\\\*                                        | Coincide con 0 o m\xe1s ocurrencias del caracter anterior              |\\n| \\\\+                                        | Coincide con 1 o m\xe1s ocurrencias del caracter anterior              |\\n| ?                                         | Coincide con 0 o 1 ocurrencia del caracter anterior                 |\\n| {n}                                       | Coincide con n ocurrencias del caracter anterior                    |\\n| {n,}                                      | Coincide con n o m\xe1s ocurrencias del caracter anterior              |\\n| {n,m}                                     | Coincide con un rango de ocurrencias del caracter anterior          |\\n| \\\\[\u2026\\\\]                                     | Coincide con cualquier caracter dentro de los corchetes             |\\n| \\\\[^...\\\\]                                  | Coincide con cualquier caracter que no est\xe9 dentro de los corchetes |\\n| (\u2026)                                       | Agrupa una serie de patrones                                        |\\n|                                           | Coincide con un espacio en blanco                                   |\\n|                                           | Coincide con cualquier caracter que no sea un espacio en blanco     |\\n|                                           | Coincide con cualquier caracter alfanum\xe9rico                        |\\n|                                           | Coincide con cualquier caracter que no sea alfanum\xe9rico             |\\n|  Coincide con cualquier caracter num\xe9rico |                                                                     |\\n|                                           | Coincide con cualquier caracter que no sea num\xe9rico                 |\\n\\n## Trabajando en python {#trabajando-en-python}\\n\\npara trabajar con expresiones regulares en python, se debe importar el\\nm\xf3dulo re. A continuaci\xf3n se muestra un ejemplo de como utilizar el\\nm\xf3dulo re para buscar un patr\xf3n en una cadena de caracteres:\\n\\n``` python\\nimport re\\n```\\n\\n### Encontrar todas las coincidencias {#encontrar-todas-las-coincidencias}\\n\\n``` python\\ntext = \\"Hola, mi nombre es Juan y mi n\xfamero de tel\xe9fono es 123456789\\"\\npattern = r\\"mi\\"\\n\\nprint(re.findall(pattern, text))\\npattern = r\\"\\\\d+\\"\\nprint(re.findall(pattern, text))\\n```\\n\\n``` text\\n[\'mi\', \'mi\']\\n[\'123456789\']\\n```\\n\\n### Sustituir un patr\xf3n en una cadena de caracteres {#sustituir-un-patr\xf3n-en-una-cadena-de-caracteres}\\n\\n``` python\\ntext = \\"Hol, mi nombre es Juan y mi nUmero de tel\xe9fono es 123456789\\"\\n\\ntext = re.sub(r\\"Hol\\", \\"Hola\\", text)\\nprint(text)\\ntext = re.sub(r\\"U\\", \\"\xfa\\", text)\\nprint(text)\\n```\\n\\n``` text\\nHola, mi nombre es Juan y mi nUmero de tel\xe9fono es 123456789\\nHola, mi nombre es Juan y mi n\xfamero de tel\xe9fono es 123456789\\n```\\n\\n### Dividir una cadena de caracteres {#dividir-una-cadena-de-caracteres}\\n\\n``` python\\ntext = \\"Hola, mi nombre es Juan y mi n\xfamero de tel\xe9fono es 123456789\\"\\n\\ntext_split = re.split(r\\"y\\", text)\\ntext_split\\n```\\n\\n``` text\\n[\'Hola, mi nombre es Juan \', \' mi n\xfamero de tel\xe9fono es 123456789\']\\n```\\n\\nPython tambien tiene integrado funciones de expresiones regulares en el\\nm\xf3dulo string.\\n\\n``` python\\ntext = \\"Hola, mi nombre es Juan y mi n\xfamero de tel\xe9fono es 123456789\\"\\nprint(text.replace(\\"Juan\\", \\"Darvin\\"))\\nprint(text.split(\',\'))\\n```\\n\\n``` text\\nHola, mi nombre es Darvin y mi n\xfamero de tel\xe9fono es 123456789\\n[\'Hola\', \' mi nombre es Juan y mi n\xfamero de tel\xe9fono es 123456789\']\\n```\\n\\nEstos son solo alguno de todos los metodos que tiene python para\\ntrabajar con expresiones regulares. Para m\xe1s informaci\xf3n, puede\\nconsultar la documentaci\xf3n oficial de python en el siguiente enlace:\\nhttps://docs.python.org/3/library/re.html"},{"id":"introduccion-a-los-algoritmos-de-clustering","metadata":{"permalink":"/article/introduccion-a-los-algoritmos-de-clustering","source":"@site/blog/introduccion-a-los-algoritmos-de-clustering.md","title":"Clustering","description":"\xbfQue es clustering?","date":"2023-06-04T00:00:00.000Z","formattedDate":"4 de junio de 2023","tags":[{"label":"clustering","permalink":"/article/tags/clustering"},{"label":"machine learning","permalink":"/article/tags/machine-learning"}],"readingTime":2.23,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Clustering","decription":"Introducci\xf3n a los algoritmos de clustering","slug":"introduccion-a-los-algoritmos-de-clustering","date":"2023-06-04T00:00:00.000Z","authors":["ccdarvin"],"tags":["clustering","machine learning"]},"prevItem":{"title":"Expresiones regulares en Python","permalink":"/article/expresiones-regulares-python"},"nextItem":{"title":"Comando m\xe1gico timeit - jupyter","permalink":"/article/comando-magico-timeit-jupyter"}},"content":"## \xbfQue es clustering?\\n\\nClustering es un m\xe9todo de aprendizaje no supervisado, que consiste en agrupar un conjunto de objetos de tal manera que los objetos del mismo grupo (o cluster) sean m\xe1s similares (en alg\xfan sentido o en alg\xfan aspecto) entre s\xed que los de otros grupos.\\n\\n## k-means\\n\\nk-means es un algoritmo de clustering que consiste en agrupar un conjunto de objetos de tal manera que los objetos del mismo grupo (o cluster) sean m\xe1s similares (en alg\xfan sentido o en alg\xfan aspecto) entre s\xed que los de otros grupos.\\n\\n\\n### Algoritmo  de k-means\\n\\n1. Inicializar los centroides de los clusters aleatoriamente (k puntos): $\\\\mu_1, \\\\mu_2, ..., \\\\mu_k$\\n\\n$$\\n\\\\begin{align} \\n    repeat \\\\{ \\\\\\\\\\n        & \\\\# Asignar \\\\ puntos \\\\ a \\\\ los \\\\ centroides \\\\ del \\\\ cluster \\\\\\\\ \\n        & \\\\text{for } i = 1 \\\\text{ to } m \\\\\\\\\\n        & \\\\quad c^{(i)} := \\\\text{\xedndice (de 1 a k) del centroide m\xe1s cercano a } x^{(i)} \\\\\\\\\\n        & \\\\# \\\\ Mover \\\\ los \\\\ centroides \\\\ de \\\\ los \\\\ clusters \\\\\\\\\\n        & \\\\text{for } k = 1 \\\\text{ to } k \\\\\\\\\\n        & \\\\quad u_k := \\\\text{promedio de los puntos asignados al cluster } k \\\\\\\\\\n    \\\\} \\\\\\\\\\n\\\\end{align}\\n$$\\n\\n![Convergencia de k-means](images/K-means_convergence.gif)\\n\\n\\n### k-means optimizaci\xf3n objetivo\\n\\n* $c^{(i)}$ = \xedndice del cluster (1, 2, ..., k) al que se asigna el ejemplo $x^{(i)}$\\n* $u_k$ = vector de par\xe1metros del centroide del cluster $k$ \\n* $\\\\mu_{c^{(i)}}$ = vector de par\xe1metros del centroide del cluster al que se asigna el ejemplo $x^{(i)}$\\n\\n**Funci\xf3n de costo**\\n\\n$$J(c^{(1)}, ..., c^{(m)}, \\\\mu_1, ..., \\\\mu_k) = \\\\frac{1}{m} \\\\sum_{i=1}^{m} ||x^{(i)} - \\\\mu_{c^{(i)}}||^2$$\\n\\n\\n**Objetivo**: Encontrar $c^{(1)}, ..., c^{(m)}, \\\\mu_1, ..., \\\\mu_k$ que minimicen $J$.\\n\\n$$min_{c^{(1)}, ..., c^{(m)}, \\\\mu_1, ..., \\\\mu_k} J(c^{(1)}, ..., c^{(m)}, \\\\mu_1, ..., \\\\mu_k)$$\\n\\n\\n### Inicializando k-means\\n\\n* **Seleccionar aleatoriamente** $k$ ejemplos de entrenamiento $x^{(1)}, ..., x^{(k)}$ que servir\xe1n como los centroides iniciales: $\\\\mu_1, ..., \\\\mu_k$.\\n\\n\\n### Elecci\xf3n del n\xfamero de clusters\\n\\n**\xbfCual es el n\xfamero de clusters \xf3ptimo?**\\n\\nPara elegir el n\xfamero de clusters \xf3ptimo se puede utilizar los siguientes 2 m\xe9todos:\\n\\n* **M\xe9todo del codo**: el metodo del codo consiste en graficar el valor de la funci\xf3n de costo $J$ en funci\xf3n del n\xfamero de clusters $k$. El n\xfamero de clusters \xf3ptimo ser\xe1 el valor de $k$ en el que la funci\xf3n de costo $J$ se \\"quiebre\\" o tenga un cambio de pendiente m\xe1s pronunciado.\\n\\n![M\xe9todo del codo](images/image.png)\\n\\nNo es una buena m\xe9trica para elegir el n\xfamero de clusters \xf3ptimo, ya que no siempre se puede identificar un cambio de pendiente claro en la gr\xe1fica, no hay un codo claro. \\n\\nla elecci\xf3n del n\xfamero de clusters es subjetiva, depende de la aplicaci\xf3n y del contexto."},{"id":"comando-magico-timeit-jupyter","metadata":{"permalink":"/article/comando-magico-timeit-jupyter","source":"@site/blog/comando magico timeit - jupyter.md","title":"Comando m\xe1gico timeit - jupyter","description":"El comando m\xe1gico %timeit en Jupyter Lab es una forma conveniente de medir el tiempo de ejecuci\xf3n de una expresi\xf3n o una funci\xf3n directamente en tus celdas de c\xf3digo. Puedes utilizar %timeit para obtener r\xe1pidamente el tiempo promedio de ejecuci\xf3n y comparar diferentes enfoques de implementaci\xf3n.","date":"2023-06-01T00:00:00.000Z","formattedDate":"1 de junio de 2023","tags":[{"label":"jupyter","permalink":"/article/tags/jupyter"},{"label":"python","permalink":"/article/tags/python"},{"label":"timeit","permalink":"/article/tags/timeit"},{"label":"magic command","permalink":"/article/tags/magic-command"}],"readingTime":3.025,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Comando m\xe1gico timeit - jupyter","description":"El comando m\xe1gico %timeit en Jupyter Lab es una forma conveniente de medir el tiempo de ejecuci\xf3n de una expresi\xf3n o una funci\xf3n directamente en tus celdas de c\xf3digo. Puedes utilizar %timeit para obtener r\xe1pidamente el tiempo promedio de ejecuci\xf3n y comparar diferentes enfoques de implementaci\xf3n.","slug":"comando-magico-timeit-jupyter","authors":["ccdarvin"],"date":"2023-06-01T00:00:00.000Z","tags":["jupyter","python","timeit","magic command"],"categories":["jupyter"]},"prevItem":{"title":"Clustering","permalink":"/article/introduccion-a-los-algoritmos-de-clustering"},"nextItem":{"title":"Vectorize de numpy vs apply de pandas","permalink":"/article/vectorize-numpy-vs-apply-pandas"}},"content":"El comando m\xe1gico `%timeit` en Jupyter Lab es una forma conveniente de\\nmedir el tiempo de ejecuci\xf3n de una expresi\xf3n o una funci\xf3n directamente\\nen tus celdas de c\xf3digo. Puedes utilizar `%timeit` para obtener\\nr\xe1pidamente el tiempo promedio de ejecuci\xf3n y comparar diferentes\\nenfoques de implementaci\xf3n.\\n\\n## 1. Uso b\xe1sico de `%timeit` {#uso-b\xe1sico-de-timeit}\\n\\nPara utilizar `%timeit`, simplemente coloca el comando m\xe1gico antes de\\nla expresi\xf3n o funci\xf3n que deseas medir. Por ejemplo, para medir el\\ntiempo de ejecuci\xf3n de la expresi\xf3n `\'1 + 1\'`, puedes usar el siguiente\\nc\xf3digo en una celda de Jupyter Lab:\\n\\n``` python\\n%timeit 1 + 1\\n```\\n\\n``` text\\n10.1 ns \xb1 0.491 ns per loop (mean \xb1 std. dev. of 7 runs, 100,000,000 loops each)\\n```\\n\\nDespu\xe9s de ejecutar la celda, `%timeit` ejecutar\xe1 la expresi\xf3n `\'1 + 1\'`\\nvarias veces y mostrar\xe1 el tiempo promedio de ejecuci\xf3n. En este caso,\\nel tiempo promedio de ejecuci\xf3n en unidades de tiempo\\n\\n## 2. Tabla de tiempos {#tabla-de-tiempos}\\n\\n| Abreviatura | Unidad de tiempo |\\n|-------------|------------------|\\n| ns          | nanosegundos     |\\n| us          | microsegundos    |\\n| ms          | milisegundos     |\\n| s           | segundos         |\\n| m           | minutos          |\\n| h           | horas            |\\n\\n## 3. Especificar el n\xfamero de ejecuciones y repeticiones {#especificar-el-n\xfamero-de-ejecuciones-y-repeticiones}\\n\\nPor defecto, `%timeit` ejecuta la expresi\xf3n o funci\xf3n 100.000 veces y\\nrepite la operaci\xf3n tres veces. Puedes especificar el n\xfamero de\\nejecuciones y repeticiones utilizando la sintaxis\\n`%timeit -r <repeticiones> -n <ejecuciones>`. Por ejemplo, para ejecutar\\nla expresi\xf3n `\'1 + 1\'` 10.000 veces y repetir la operaci\xf3n cinco veces,\\npuedes usar el siguiente c\xf3digo:\\n\\n``` python\\n%timeit -r5 -n50 1 + 1\\n```\\n\\n``` text\\n25.6 ns \xb1 5.28 ns per loop (mean \xb1 std. dev. of 5 runs, 50 loops each)\\n```\\n\\nEn el comando anterior espesificamps que se ejecute 50 veces en 5\\nrepeticiones\\n\\n## 5. Medir el tiempo de ejecuci\xf3n de una funci\xf3n {#medir-el-tiempo-de-ejecuci\xf3n-de-una-funci\xf3n}\\n\\nTambi\xe9n puedes utilizar `%timeit` para medir el tiempo de ejecuci\xf3n de\\nuna funci\xf3n. Por ejemplo, para medir el tiempo de ejecuci\xf3n de la\\nfunci\xf3n `sum()` de Python, puedes usar el siguiente c\xf3digo:\\n\\n``` python\\ndef mi_funcion():\\n    # puedes colocar cualquier c\xf3digo aqu\xed\\n    return 1 + 1\\n```\\n\\nJupyter Lab ejecutara el c\xf3digo y te devolvera el tiempo de ejecuci\xf3n de\\nla funci\xf3n\\n\\n## 6. Medir el tiempo de ejecuci\xf3n de una celda {#medir-el-tiempo-de-ejecuci\xf3n-de-una-celda}\\n\\nTambi\xe9n puedes utilizar `%timeit` para medir el tiempo de ejecuci\xf3n de\\nuna celda completa. Por ejemplo, para medir el tiempo de ejecuci\xf3n de la\\nsiguiente celda, puedes usar el siguiente c\xf3digo:\\n\\n``` python\\n%%timeit\\nx = 1\\nx += 1\\n```\\n\\n``` text\\n36.7 ns \xb1 1.13 ns per loop (mean \xb1 std. dev. of 7 runs, 10,000,000 loops each)\\n```\\n\\n## 7. Obtener el tiempo de ejecuci\xf3n como variable {#obtener-el-tiempo-de-ejecuci\xf3n-como-variable}\\n\\nEn caso de que desees obtener informaci\xf3n m\xe1s detallada sobre el tiempo\\nde ejecuci\xf3n, podrias asignar el resultado de `%timeit` a una variable,\\npara esto utilizaremos las opciones `-o` para almacenar el resultado y\\n-q para silenciar la salida de la celda. Por ejemplo, para obtener el\\ntiempo de ejecuci\xf3n de la expresi\xf3n `\'1 + 1\'` como una variable, puedes\\nusar el siguiente c\xf3digo:\\n\\n``` python\\nresultado = %timeit -o -q 1 + 1\\nprint(f\'El mejor tiempo fue {resultado.best}\')\\nprint(f\'El peor tiempo fue {resultado.worst}\')\\n```\\n\\n``` text\\nEl mejor tiempo fue 9.775258000008763e-09\\nEl peor tiempo fue 1.1235137999756262e-08\\n```\\n\\nHemos visto de forma muy rapida como usar el comando magico `%timeit` en\\nJupyter Lab, con expresiones muy sencillas, pero en la practica se\\nutiliza para medir el tiempo de ejecuci\xf3n de funciones y celdas\\ncompletas, lo cual es muy util para comparar diferentes enfoques de\\nimplementaci\xf3n."},{"id":"vectorize-numpy-vs-apply-pandas","metadata":{"permalink":"/article/vectorize-numpy-vs-apply-pandas","source":"@site/blog/vectorize de numpy vs apply de pandas.md","title":"Vectorize de numpy vs apply de pandas","description":"Tanto numpy como pandas tienen funciones que permiten aplicar una","date":"2023-06-01T00:00:00.000Z","formattedDate":"1 de junio de 2023","tags":[{"label":"python","permalink":"/article/tags/python"},{"label":"pandas","permalink":"/article/tags/pandas"},{"label":"numpy","permalink":"/article/tags/numpy"},{"label":"vectorize","permalink":"/article/tags/vectorize"},{"label":"apply","permalink":"/article/tags/apply"}],"readingTime":0.945,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Vectorize de numpy vs apply de pandas","date":"2023-06-01T00:00:00.000Z","deescription":"Cual es la diferencia entre vectorize de numpy y apply de pandas","authors":["ccdarvin"],"slug":"vectorize-numpy-vs-apply-pandas","tags":["python","pandas","numpy","vectorize","apply"]},"prevItem":{"title":"Comando m\xe1gico timeit - jupyter","permalink":"/article/comando-magico-timeit-jupyter"},"nextItem":{"title":"\xbfComo perfilar c\xf3digo con line_profiler?","permalink":"/article/perfilar-codigo-con-line-profiler"}},"content":"Tanto numpy como pandas tienen funciones que permiten aplicar una\\nfuncion a un array o dataframe, respectivamente, de forma vectorizada.\\nEsto significa que la funcion se aplica a todos los elementos del array\\no dataframe, sin necesidad de iterar sobre ellos. Esto es mucho mas\\neficiente que iterar sobre los elementos, ya que no se necesita hacer un\\nloop en python, sino que la funcion se aplica en C.\\n\\n``` python\\nimport numpy as np\\nimport pandas as pd\\n\\n# comparaci\xf3n de vectorize de numpy vs apply de pandas\\n\\n# vectorize de numpy\\ndef f(x):\\n    return x**2 + 1\\n\\narray = np.arange(100000, dtype=np.int16)\\n\\n%timeit np.vectorize(f)(array)\\n# pandas apply\\ndf = pd.DataFrame({\'x\': array})\\n%timeit df[\'x\'].apply(f)\\n```\\n\\n``` text\\n24.2 ms \xb1 1.56 ms per loop (mean \xb1 std. dev. of 7 runs, 10 loops each)\\n40.7 ms \xb1 1.01 ms per loop (mean \xb1 std. dev. of 7 runs, 10 loops each)\\n```\\n\\nEsta es una comparaci\xf3n muy simple entre ambas formas de aplicar una\\nfuncion, pero nos da una idea bastante clara de la diferencia de\\nperformance entre ambas, como podemos ver vectorize fue mucho mas rapido\\nque apply."},{"id":"perfilar-codigo-con-line-profiler","metadata":{"permalink":"/article/perfilar-codigo-con-line-profiler","source":"@site/blog/perfilar codigo con line_profiler.md","title":"\xbfComo perfilar c\xf3digo con line_profiler?","description":"Perfilar c\xf3digo nos permite identificar las partes de nuestro c\xf3digo que son m\xe1s lentas y optimizarlas.","date":"2023-05-03T00:00:00.000Z","formattedDate":"3 de mayo de 2023","tags":[{"label":"python","permalink":"/article/tags/python"},{"label":"perfilar","permalink":"/article/tags/perfilar"},{"label":"line_profiler","permalink":"/article/tags/line-profiler"},{"label":"optimizar c\xf3digo","permalink":"/article/tags/optimizar-codigo"}],"readingTime":1.665,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"\xbfComo perfilar c\xf3digo con line_profiler?","description":"Perfilar c\xf3digo nos permite identificar las partes de nuestro c\xf3digo que son m\xe1s lentas y optimizarlas.","lang":"es","authors":["ccdarvin"],"slug":"perfilar-codigo-con-line-profiler","date":"2023-05-03T00:00:00.000Z","tags":["python","perfilar","line_profiler","optimizar c\xf3digo"]},"prevItem":{"title":"Vectorize de numpy vs apply de pandas","permalink":"/article/vectorize-numpy-vs-apply-pandas"},"nextItem":{"title":"Teorema de limite central","permalink":"/article/teorema-de-limite-central"}},"content":"\xbfAlguna vez has tenido que optimizar el c\xf3digo de un programa?\\n`line_profiler` es una herramienta que te permite perfilar el c\xf3digo de\\nun programa para encontrar las partes que m\xe1s tiempo consumen. En este\\nnotebook veremos c\xf3mo usarla.\\n\\n## Instalaci\xf3n {#instalaci\xf3n}\\n\\nComo `line_profiler` no viene instalado por defecto en Anaconda, lo\\ninstalaremos con `conda`:\\n\\nEn la terminal:\\n\\n``` bash\\npip install line_profiler\\n```\\n\\nEn el notebook:\\n\\n``` python\\n! pip install line_profiler\\n```\\n\\n## \xbfC\xf3mo funciona en Jupyter? {#c\xf3mo-funciona-en-jupyter}\\n\\n`line_profiler` es una herramienta que permite perfilar el c\xf3digo de un\\nprograma. Esto significa que nos permite ver cu\xe1nto tiempo se tarda en\\nejecutar cada l\xednea de c\xf3digo. Para ello, `line_profiler` nos permite\\nusar el comando `%lprun` en Jupyter. Este comando nos permite perfilar\\nuna funci\xf3n. Para ello, debemos a\xf1adir el decorador `@profile` a la\\nfunci\xf3n que queremos perfilar.\\n\\ncargar el m\xf3dulo `line_profiler` en el notebook:\\n\\n``` python\\n%load_ext line_profiler\\n```\\n\\n``` text\\nThe line_profiler extension is already loaded. To reload it, use:\\n  %reload_ext line_profiler\\n```\\n\\n## Perfilando una funci\xf3n {#perfilando-una-funci\xf3n}\\n\\nPerfilar una funcion en en jupyter lab ees muy sencillo con el comando\\n`%lprun`. Para ello vamos a crear una funcion de prueba que calcule el\\ndoble de una lista de n\xfameros:\\n\\n``` python\\n\\ndef funcion_prueba():\\n    data = [1, 2, 3, 4, 5, 6, 7, 8, 9]\\n    doble = []\\n    for item in data:\\n        doble.append(item * 2)\\n    \\n    return doble    \\n```\\n\\n``` python\\n%lprun -f funcion_prueba funcion_prueba()\\n```\\n\\n``` text\\nTimer unit: 1e-07 s\\n\\nTotal time: 8e-06 s\\n\\nCould not find file C:\\\\Users\\\\WillyCotrina\\\\AppData\\\\Local\\\\Temp\\\\ipykernel_14792\\\\1026023441.py\\nAre you sure you are running this program from the same directory\\nthat you ran the profiler from?\\nContinuing without the function\'s contents.\\n\\nLine #      Hits         Time  Per Hit   % Time  Line Contents\\n==============================================================\\n     1                                           \\n     2         1          7.0      7.0      8.8  \\n     3         1          3.0      3.0      3.8  \\n     4         9         24.0      2.7     30.0  \\n     5         9         43.0      4.8     53.8  \\n     6                                           \\n     7         1          3.0      3.0      3.8\\n```\\n\\nComo pudimos notar pefilar una funcion es muy sencillo y extremaente\\nutil para optimizar el codigo de un programa."},{"id":"teorema-de-limite-central","metadata":{"permalink":"/article/teorema-de-limite-central","source":"@site/blog/teorema-de-limite-central.md","title":"Teorema de limite central","description":"El Teorema de l\xedmite central (TLC) es un resultado fundamental en estad\xedstica.","date":"2023-04-06T00:00:00.000Z","formattedDate":"6 de abril de 2023","tags":[{"label":"estad\xedstica","permalink":"/article/tags/estadistica"},{"label":"probabilidad","permalink":"/article/tags/probabilidad"},{"label":"teorema de l\xedmite central","permalink":"/article/tags/teorema-de-limite-central"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Teorema de limite central","slug":"teorema-de-limite-central","description":"El Teorema de l\xedmite central (TLC) es un resultado fundamental en estad\xedstica.","date":"2023-04-06T00:00:00.000Z","autors":["ccdarvin"],"tags":["estad\xedstica","probabilidad","teorema de l\xedmite central"]},"prevItem":{"title":"\xbfComo perfilar c\xf3digo con line_profiler?","permalink":"/article/perfilar-codigo-con-line-profiler"},"nextItem":{"title":"Articulos","permalink":"/article/index"}},"content":"El teorema del l\xedmite central (TLC) establece que, para una muestra\\naleatoria de tama\xf1o $n$, la distribuci\xf3n de las medias muestrales se\\naproxima a una distribuci\xf3n normal a medida que $n$ aumenta.\\n\\nSean $X_1, X_2, \\\\ldots, X_n$ una muestra aleatoria de tama\xf1o $n$ de una\\npoblaci\xf3n con media $\\\\mu$ y varianza $\\\\sigma^2$. Entonces, para $n$\\nsuficientemente grande, la variable aleatoria es:\\n\\n$$Z_n = \\\\frac{\\\\bar{X} - \\\\mu}{\\\\sigma / \\\\sqrt{n}}$$\\n\\n## En python {#en-python}\\n\\nPara graficar el TLC en python, usaremos un ejemplo de tirar dados.\\n\\n``` python\\nimport numpy as np  \\nimport matplotlib.pyplot as plt\\n# Tiraremos 10 veces los dados y calcularemos la media \\ndados = list(range(1,7))\\nmuestra_10 = np.random.choice(dados, size=10, replace=True)\\nmedia = np.mean(muestra_10)\\nprint(\\"La media de la muestra es: \\", media)\\n```\\n\\n``` text\\nLa media de la muestra es:  3.0\\n```\\n\\nComo podemos ver la Media de esta muestra no es 3.5, hora veamos que\\npasa si hacemos este mismo experimento pero 10 veces.\\n\\n``` python\\nexp_10 = [np.mean(muestra) for muestra in np.random.choice(dados, size=(10, 10), replace=True)]\\n\\n# Graficamos el histograma de las medias\\nplt.hist(exp_10, bins=10, density=True, alpha=0.5)\\nplt.vlines(3.5, 0, 1, color=\'red\', label=\'Media te\xf3rica\')\\nplt.vlines(np.mean(exp_10), 0, 1, color=\'green\', label=\'Media muestral\')\\nplt.show()\\n```\\n\\n![](teorema-de-limite-central_files/figure-markdown_strict/cell-3-output-1.png)\\n\\nAhora veamos que pasa si hacemos este mismo experimento pero 1000 veces.\\n\\n``` python\\nexp_1000 = [np.mean(muestra) for muestra in np.random.choice(dados, size=(1000, 10), replace=True)]\\n# Graficamos\\nplt.hist(exp_1000, bins=10, density=True, alpha=0.5)\\nplt.vlines(3.5, 0, 1, color=\'red\', label=\'Media te\xf3rica\')\\nplt.vlines(np.mean(exp_1000), 0, 1, color=\'green\', label=\'Media muestral\')\\nplt.show()\\n```\\n\\n![](teorema-de-limite-central_files/figure-markdown_strict/cell-4-output-1.png)\\n\\nComo podemos ver, a medida que aumentamos el n\xfamero de experimentos, la\\ndistribuci\xf3n de las medias muestrales se aproxima a una distribuci\xf3n\\nnormal.\\n\\n:::caution\\n\\nSi ejecutas este c\xf3digo en tu computadora, es posible que no obtengas\\nlos mismos resultados que yo, ya que los n\xfameros aleatorios son\\ngenerados de forma aleatoria.\\n\\n:::"},{"id":"/index","metadata":{"permalink":"/article/index","source":"@site/blog/index.md","title":"Articulos","description":"","date":"2023-01-01T00:00:00.000Z","formattedDate":"1 de enero de 2023","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2023-01-01T00:00:00.000Z"},"prevItem":{"title":"Teorema de limite central","permalink":"/article/teorema-de-limite-central"},"nextItem":{"title":"Arbol de Desici\xf3n, conceptos b\xe1sicos","permalink":"/article/arbol-decision-conceptos-basicos"}},"content":""},{"id":"arbol-decision-conceptos-basicos","metadata":{"permalink":"/article/arbol-decision-conceptos-basicos","source":"@site/blog/arbol-de-desicion-conceptos-basicos.md","title":"Arbol de Desici\xf3n, conceptos b\xe1sicos","description":"Modelo de arbol de desici\xf3n","date":"2022-05-20T10:00:00.000Z","formattedDate":"20 de mayo de 2022","tags":[{"label":"Machine Learning","permalink":"/article/tags/machine-learning"},{"label":"Python","permalink":"/article/tags/python"},{"label":"Arbol de Desici\xf3n","permalink":"/article/tags/arbol-de-desicion"}],"readingTime":2.59,"hasTruncateMarker":false,"authors":[{"name":"Darvin Cotrina","title":"Creador de entredata.org","url":"https://github.com/ccdarvin","imageURL":"https://github.com/ccdarvin.png","key":"ccdarvin"}],"frontMatter":{"title":"Arbol de Desici\xf3n, conceptos b\xe1sicos","slug":"arbol-decision-conceptos-basicos","date":"2022-05-20T10:00:00.000Z","authors":["ccdarvin"],"tags":["Machine Learning","Python","Arbol de Desici\xf3n"]},"prevItem":{"title":"Articulos","permalink":"/article/index"}},"content":"## Modelo de arbol de desici\xf3n\\n\\nUn \xe1rbol de decisi\xf3n es un modelo de predicci\xf3n utilizado en el \xe1mbito de la inteligencia artificial, que utiliza un \xe1rbol de estructura similar a los diagramas de flujo en donde cada nodo representa una caracter\xedstica (o atributo), cada rama representa una regla de decisi\xf3n y cada hoja representa el resultado de una decisi\xf3n. Los \xe1rboles de decisi\xf3n son utilizados com\xfanmente en miner\xeda de datos con el fin de resolver problemas de clasificaci\xf3n.\\n\\nEjemplo de un arbol de desici\xf3n y su estructura:\\n\\n![Arbol de desici\xf3n](https://static.javatpoint.com/tutorial/machine-learning/images/decision-tree-classification-algorithm.png)\\n\\n\\n## Entrop\xeda\\n\\n### \xbfQu\xe9 es la entrop\xeda?\\n\\nLa entrop\xeda es una medida de incertidumbre. En el contexto de la toma de decisiones, la entrop\xeda mide la impureza de un conjunto de ejemplos S. Si S solo contiene ejemplos de una clase, entonces la entrop\xeda es 0. Si S contiene una cantidad uniforme de ejemplos de cada clase, entonces la entrop\xeda es 1. La entrop\xeda de un conjunto S se denota por H (S).\\n\\n\\n### \xbfC\xf3mo se calcula la entrop\xeda?\\n\\nLa entrop\xeda de un conjunto S se calcula como:\\n\\n$$H(S) = -\\\\sum_{i=1}^{c} p_i log_2 p_i$$\\n\\nDonde:\\n* $c$ es el n\xfamero de clases\\n* $p_i$ es la proporci\xf3n de ejemplos de clase $i$ en $S$\\n* $log_2$ es el logaritmo en base 2\\n\\n\\n### Ejemplo de c\xe1lculo de entrop\xeda\\n\\nSupongamos que tenemos un conjunto de ejemplos $S$ con 14 ejemplos de clase 1 y 6 ejemplos de clase 2. La entrop\xeda de $S$ es:\\n\\n$P_1 = 14/20$ y \\n$P_2 = 6/20$\\n\\nEntonces, la entrop\xeda de $S$ ser\xeda: $H(S) = - \\\\left(\\\\frac{14}{20} \\\\log_2 \\\\frac{14}{20} + \\\\frac{6}{20} \\\\log_2 \\\\frac{6}{20}\\\\right) \\\\approx 0.88$.\\n\\n\\n## Ganancia de informaci\xf3n\\n\\nLa ganancia de informaci\xf3n(IG) se utiliza para decidir qu\xe9 atributo se utilizar\xe1 para dividir el conjunto de datos en subconjuntos homog\xe9neos. La ganancia de informaci\xf3n se define como la diferencia entre la entrop\xeda antes de la divisi\xf3n y la entrop\xeda despu\xe9s de la divisi\xf3n por un atributo. La ganancia de informaci\xf3n se denota por IG (S, A) y se calcula como:\\n\\n$$IG(S, A) = H(S) - \\\\sum_{v \\\\in Values(A)} \\\\frac{|S_v|}{|S|} H(S_v)$$\\n\\n\\nDonde:\\n* $S$ es el conjunto de ejemplos\\n* $A$ es el atributo utilizado para dividir $S$ en subconjuntos\\n* $Values(A)$ es el conjunto de valores que puede tomar el atributo $A$\\n* $S_v$ es el subconjunto de $S$ en el que el atributo $A$ tiene el valor $v$\\n\\n\\n## Indice Gini\\n\\nEl \xedndice de Gini es una medida de impureza utilizada en los \xe1rboles de decisi\xf3n para decidir qu\xe9 atributo dividir un nodo en dos o m\xe1s subnodos. El \xedndice de Gini se define como:\\n\\n$$Gini(S) = 1 - \\\\sum_{i=1}^{c} p_i^2$$\\n\\nDonde:\\n* $c$ es el n\xfamero de clases\\n* $p_i$ es la proporci\xf3n de ejemplos de clase $i$ en $S$\\n\\n## Pros y contras de los \xe1rboles de decisi\xf3n\\n\\n### Pros\\n\\n* F\xe1cil de entender e interpretar. Los \xe1rboles se pueden visualizar.\\n* Puede ser muy util para solucionar problemas relacionados con decisiones.\\n* Hay menos requisitos de limpieza de datos\\n\\n### Contras\\n\\n* Los \xe1rboles de decisi\xf3n pueden ser poco precisos. Pueden ser muy sensibles a peque\xf1os cambios en los datos."}]}')}}]);