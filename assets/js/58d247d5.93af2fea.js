"use strict";(self.webpackChunkdocsweb=self.webpackChunkdocsweb||[]).push([[5432],{876:(e,n,i)=>{i.d(n,{Zo:()=>p,kt:()=>b});var a=i(2784);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,a)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,a,t=function(e,n){if(null==e)return{};var i,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)i=o[a],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)i=o[a],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var s=a.createContext({}),c=function(e){var n=a.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):r(r({},n),e)),i},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var i=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(i),m=t,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return i?a.createElement(b,r(r({ref:n},p),{},{components:i})):a.createElement(b,r({ref:n},p))}));function b(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=i.length,r=new Array(o);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:t,r[1]=l;for(var c=2;c<o;c++)r[c]=i[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,i)}m.displayName="MDXCreateElement"},1432:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=i(7896),t=(i(2784),i(876));const o={title:"Distribuci\xf3n binomial - python",description:"Distribuci\xf3n binomial en python",tags:["estad\xedstica","python","scipy","distribuci\xf3n estad\xedstica"],autors:["ccdarvin"],date:new Date("2023-06-05T00:00:00.000Z"),slug:"distribucion-binomial-python"},r="Distrbuci\xf3n Binomial - python {#distrbuci\xf3n-binomial---python}",l={permalink:"/article/distribucion-binomial-python",source:"@site/blog/distribucion-binomial-python.md",title:"Distribuci\xf3n binomial - python",description:"Distribuci\xf3n binomial en python",date:"2023-06-05T00:00:00.000Z",formattedDate:"5 de junio de 2023",tags:[{label:"estad\xedstica",permalink:"/article/tags/estadistica"},{label:"python",permalink:"/article/tags/python"},{label:"scipy",permalink:"/article/tags/scipy"},{label:"distribuci\xf3n estad\xedstica",permalink:"/article/tags/distribucion-estadistica"}],readingTime:3.22,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Distribuci\xf3n binomial - python",description:"Distribuci\xf3n binomial en python",tags:["estad\xedstica","python","scipy","distribuci\xf3n estad\xedstica"],autors:["ccdarvin"],date:"2023-06-05T00:00:00.000Z",slug:"distribucion-binomial-python"},prevItem:{title:"Articulos",permalink:"/article/index"},nextItem:{title:"\xbfComo perfilar c\xf3digo con line_profiler?",permalink:"/article/perfilar-codigo-con-line-profiler"}},s={authorsImageUrls:[]},c=[{value:"Funci\xf3n de probabilidad",id:"funci\xf3n-de-probabilidad",level:2},{value:"Optener la distribuci\xf3n binomial con python",id:"optener-la-distribuci\xf3n-binomial-con-python",level:2},{value:"Funci\xf3n de distribuci\xf3n acumulada",id:"funci\xf3n-de-distribuci\xf3n-acumulada",level:2},{value:"Como generar n\xfameros aleatorios con distribuci\xf3n binomial",id:"como-generar-n\xfameros-aleatorios-con-distribuci\xf3n-binomial",level:2}],p={toc:c},d="wrapper";function u(e){let{components:n,...o}=e;return(0,t.kt)(d,(0,a.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"La distribuci\xf3n binomial es un modelo de probabilidad discreta que\ncuenta el n\xfamero de \xe9xitos en una secuencia de $n$ ensayos de Bernoulli\nindependientes entre s\xed, con una probabilidad fija $p$ de ocurrencia del\n\xe9xito entre los ensayos. Un experimento de Bernoulli se caracteriza por\nser dicot\xf3mico, esto es, s\xf3lo son posibles dos resultados. A uno de\nestos se denomina \xe9xito y tiene una probabilidad de ocurrencia $p$ y al\notro, fracaso, con una probabilidad $q = 1 - p$, de ocurrencia."),(0,t.kt)("h2",{id:"funci\xf3n-de-probabilidad"},"Funci\xf3n de probabilidad"),(0,t.kt)("p",null,"La funci\xf3n de probabilidad de una distribuci\xf3n binomial es:"),(0,t.kt)("p",null,"$$f(k,n,p) = P(X = k) = \\binom{n}{k} p^k (1-p)^{n-k}$$"),(0,t.kt)("p",null,"donde: ","*"," $n$ es el n\xfamero de ensayos ","*"," $k$ es el n\xfamero de \xe9xitos ","*","\n$p$ es la probabilidad de \xe9xito en cada ensayo ","*","\n$\\binom{n}{k} = \\frac{n!}{k!(n-k)!}$ es el coeficiente binomial"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"El coeficiente binomial")," $\\binom{n}{k}$ es el n\xfamero de formas de\nescoger un subconjunto de $k$ elementos, sin importar el orden, de un\nconjunto de $n$ elementos. Se lee \u201cn sobre k\u201d."),(0,t.kt)("h2",{id:"optener-la-distribuci\xf3n-binomial-con-python"},"Optener la distribuci\xf3n binomial con python"),(0,t.kt)("p",null,"Ahora usaremos python para obtener la distribuci\xf3n binomial de un\nexperimento. Para ello usaremos la funci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"binom")," de la librer\xeda\n",(0,t.kt)("inlineCode",{parentName:"p"},"scipy.stats"),". Esta funci\xf3n recibe como par\xe1metros el n\xfamero de ensayos\n$n$ y la probabilidad de ocurrencia del \xe9xito $p$."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"pip install scipy\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-python"},"from scipy.stats import binom\nfrom matplotlib import pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Definimos los par\xe1metros de la distribuci\xf3n\nn = 10\np = 0.5\n\n# Obtenemos los valores de la distribuci\xf3n\nx = list(range(0, n+1))\npmf_5 = binom.pmf(x, n, p)\n\n# sesgada a la derecha\np = 0.2\npmf_2 = binom.pmf(x, n, p)\n\n# sesgada a la izquierda\np = 0.8\npmf_8 = binom.pmf(x, n, p)\n\n# subplots\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Graficamos\naxs[0].plot(x, pmf_5, 'og', ms=8, c='b')\naxs[0].vlines(x, 0, pmf_5, colors='b', lw=2, alpha=0.5, label='p=0.5')\naxs[1].plot(x, pmf_2, 'og', ms=8, c='g')\naxs[1].vlines(x, 0, pmf_2, colors='g', lw=2, alpha=0.5, label='p=0.2')\naxs[2].plot(x, pmf_8, 'og', ms=8, c='r')\naxs[2].vlines(x, 0, pmf_8, colors='r', lw=2, alpha=0.5, label='p=0.8')\nfig.legend()\nfig.show()\n")),(0,t.kt)("p",null,(0,t.kt)("img",{src:i(1086).Z,width:"1366",height:"481"})),(0,t.kt)("p",null,"Copo podemos ver en el grafico si usamos una probabilidad de ocurrencia\ndel \xe9xito de 0.5, la distribuci\xf3n es sim\xe9trica y si usamos una\nprobabilidad de ocurrencia del \xe9xito mayor a 0.5, la distribuci\xf3n se\nsesga hacia la derecha y si usamos una probabilidad de ocurrencia del\n\xe9xito menor a 0.5, la distribuci\xf3n se sesga hacia la izquierda."),(0,t.kt)("h2",{id:"funci\xf3n-de-distribuci\xf3n-acumulada"},"Funci\xf3n de distribuci\xf3n acumulada"),(0,t.kt)("p",null,"La funci\xf3n de distribuci\xf3n acumulada de una distribuci\xf3n binomial es:"),(0,t.kt)("p",null,"$$F(k,n,p) = P(X \\leq k) = \\sum_{i=0}^k \\binom{n}{i} p^i (1-p)^{n-i}$$"),(0,t.kt)("p",null,"En terminos simples, la funci\xf3n de distribuci\xf3n acumulada es la\nprobabilidad de que la variable aleatoria $X$ sea menor o igual que $k$.\nla suma de las probabilidades de todos los valores de $X$ menores o\niguales que $k$."),(0,t.kt)("p",null,"En python ser\xeda"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-python"},"# Definimos los par\xe1metros de la distribuci\xf3n\nn = 10\np = 0.5\n\n# Obtenemos los valores de la distribuci\xf3n\nx = list(range(0, n+1))\ncdf_5 = binom.cdf(x, n, p)\n\n# sesgada a la derecha\np = 0.2\ncdf_2 = binom.cdf(x, n, p)\n\n# sesgada a la izquierda\np = 0.8\ncdf_8 = binom.cdf(x, n, p)\n\n# Graficamos\nplt.plot(x, cdf_5, 'o-', label='p=0.5')\nplt.plot(x, cdf_2, 'o-', label='p=0.2')\nplt.plot(x, cdf_8, 'o-', label='p=0.8')\nplt.legend()\nplt.show()\n")),(0,t.kt)("p",null,(0,t.kt)("img",{src:i(8656).Z,width:"547",height:"413"})),(0,t.kt)("h2",{id:"como-generar-n\xfameros-aleatorios-con-distribuci\xf3n-binomial"},"Como generar n\xfameros aleatorios con distribuci\xf3n binomial"),(0,t.kt)("p",null,"Para generar n\xfameros aleatorios con distribuci\xf3n binomial usaremos la\nfunci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"binom.rvs")," de la librer\xeda ",(0,t.kt)("inlineCode",{parentName:"p"},"scipy.stats"),". Esta funci\xf3n recibe\ncomo par\xe1metros el n\xfamero de ensayos $n$, la probabilidad de ocurrencia\ndel \xe9xito $p$ y el tama\xf1o de la muestra."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-python"},"# generamos una muestra aleatoria\nn = 10\np = 0.5\nmuestra = binom.rvs(n, p, size=1000)\n\n# Graficamos\nplt.hist(muestra, bins=11, density=True)\nplt.plot(x, pmf_5, 'o-', label='p=0.5')\nplt.show()\n")),(0,t.kt)("p",null,(0,t.kt)("img",{src:i(3265).Z,width:"556",height:"413"})),(0,t.kt)("p",null,"Como hemos podido ver trabajar con distribuciones binomiales en python\nes muy sencillo y nos puede ayudar a resolver muchos problemas de\nprobabilidad."))}u.isMDXComponent=!0},1086:(e,n,i)=>{i.d(n,{Z:()=>a});const a=i.p+"assets/images/cell-2-output-1-91468125056d8f4e24222bf329478a16.png"},8656:(e,n,i)=>{i.d(n,{Z:()=>a});const a=i.p+"assets/images/cell-3-output-1-ac233b10c5cc434db4d080f725726df4.png"},3265:(e,n,i)=>{i.d(n,{Z:()=>a});const a=i.p+"assets/images/cell-4-output-1-518625e3157557b952129d870c0dd933.png"}}]);